
function fontBrushTool(editor,toolbar){"use strict";var RGBA_TRANSPARENT,currentColor,lastPoint,canvas,quickFontAccess,fontImageDataDull,fontImageDataBright,selected;RGBA_TRANSPARENT=new Uint8Array(4);selected=0;function colorChange(col){currentColor=col;}
function extendedBrush(block){editor.setChar(block,selected,currentColor);}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{if(coord.shiftKey&&lastPoint){editor.startOfChunk();editor.blockLine(lastPoint,coord,extendedBrush);editor.endOfChunk();}else{editor.startOfFreehand();extendedBrush(coord);}
lastPoint=coord;}}
function canvasDrag(coord){if(lastPoint){editor.blockLine(lastPoint,coord,extendedBrush);lastPoint=coord;}}
function generateFontImages(rgba){var i,ctx,images;ctx=canvas.getContext("2d");images=[];for(i=0;i<256;i+=1){images[i]=ctx.createImageData(editor.codepage.getFontWidth(),editor.codepage.getFontHeight());images[i].data.set(editor.codepage.fontDataRGBA(i,rgba,RGBA_TRANSPARENT),0);}
return images;}
function drawGlyphs(images){var i,y,ctx,quickAccessCtx;ctx=canvas.getContext("2d");quickAccessCtx=quickFontAccess.getContext("2d");for(i=0,y=0;i<256;i+=1){ctx.putImageData(images[i],(i%16)*(editor.codepage.getFontWidth()+1),y*(editor.codepage.getFontHeight()+1));quickAccessCtx.putImageData(images[i],(i%16)*(editor.codepage.getFontWidth()+1),y*(editor.codepage.getFontHeight()+1));if((i+1)%16===0){y+=1;}}}
function drawGlyph(index,images){canvas.getContext("2d").putImageData(images[index],(index%16)*(editor.codepage.getFontWidth()+1),Math.floor(index/16)*(editor.codepage.getFontHeight()+1));quickFontAccess.getContext("2d").putImageData(images[index],(index%16)*(editor.codepage.getFontWidth()+1),Math.floor(index/16)*(editor.codepage.getFontHeight()+1));}
function selectFromEvent(evt){var x,y,index,pos;pos=evt.currentTarget.getBoundingClientRect();x=Math.floor((evt.clientX-pos.left)/(editor.codepage.getFontWidth()+1));y=Math.floor((evt.clientY-pos.top)/(editor.codepage.getFontHeight()+1));index=y*16+x;if(index!==selected&&index<256){drawGlyph(selected,fontImageDataDull);drawGlyph(index,fontImageDataBright);selected=index;}}
function mousedown(evt){evt.preventDefault();selectFromEvent(evt);}
function mousemove(evt){var mouseButton;evt.preventDefault();mouseButton=(evt.buttons!==undefined)?evt.buttons:evt.which;if(mouseButton){evt.preventDefault();selectFromEvent(evt);}}
function createCanvas(){canvas=ElementHelper.create("canvas",{"width":16*(editor.codepage.getFontWidth()+1),"height":16*(editor.codepage.getFontHeight()+1),"style":{"cursor":"crosshair"}});quickFontAccess=ElementHelper.create("canvas",{"width":16*(editor.codepage.getFontWidth()+1),"height":16*(editor.codepage.getFontHeight()+1),"style":{"cursor":"crosshair"}});fontImageDataDull=generateFontImages(new Uint8Array([255,255,255,63]));fontImageDataBright=generateFontImages(new Uint8Array([255,255,255,255]));drawGlyphs(fontImageDataDull);canvas.addEventListener("mousedown",mousedown,false);quickFontAccess.addEventListener("mousedown",function(evt){mousedown(evt);toolbar.giveFocus("font-brush");},false);canvas.addEventListener("mousemove",mousemove,false);quickFontAccess.addEventListener("mousemove",mousemove,false);drawGlyph(selected,fontImageDataBright);}
function fontChange(){createCanvas();toolbar.replaceCanvas("font-brush",canvas);toolbar.replaceQuickFontAccess("font-brush",quickFontAccess);}
editor.addFontChangeListener(fontChange);createCanvas();function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeColorChangeListener(colorChange);}
function getState(){return[selected];}
function setState(bytes){selected=bytes[0];drawGlyphs(fontImageDataDull);drawGlyph(selected,fontImageDataBright);}
function sampleBlock(block){if(!block.isBlocky&&((block.charCode<editor.codepage.LIGHT_SHADE)||(block.charCode>editor.codepage.DARK_SHADE))){editor.setCurrentColor(block.foreground);selected=block.charCode;drawGlyphs(fontImageDataDull);drawGlyph(selected,fontImageDataBright);return true;}
return false;}
function toString(){return"Font Brush";}
function quickChoose(asciiCode){drawGlyphs(fontImageDataDull);selected=asciiCode;drawGlyph(selected,fontImageDataBright);}
function lightShade(){quickChoose(editor.codepage.LIGHT_SHADE);}
function mediumShade(){quickChoose(editor.codepage.MEDIUM_SHADE);}
function darkShade(){quickChoose(editor.codepage.DARK_SHADE);}
function fullBlock(){quickChoose(editor.codepage.FULL_BLOCK);}
function upperHalfBlock(){quickChoose(editor.codepage.UPPER_HALF_BLOCK);}
function lowerHalfBlock(){quickChoose(editor.codepage.LOWER_HALF_BLOCK);}
function leftHalfBlock(){quickChoose(editor.codepage.LEFT_HALF_BLOCK);}
function rightHalfBlock(){quickChoose(editor.codepage.RIGHT_HALF_BLOCK);}
function middleBlock(){quickChoose(editor.codepage.MIDDLE_BLOCK);}
function middleDot(){quickChoose(editor.codepage.MIDDLE_DOT);}
return{"init":init,"remove":remove,"toString":toString,"canvas":canvas,"getState":getState,"setState":setState,"sampleBlock":sampleBlock,"lightShade":lightShade,"mediumShade":mediumShade,"darkShade":darkShade,"fullBlock":fullBlock,"upperHalfBlock":upperHalfBlock,"lowerHalfBlock":lowerHalfBlock,"leftHalfBlock":leftHalfBlock,"rightHalfBlock":rightHalfBlock,"middleBlock":middleBlock,"middleDot":middleDot,"quickFontAccess":quickFontAccess,"uid":"font-brush"};}
AnsiEditController.addTool(fontBrushTool,"tools-right",101,{"lightShade":112,"mediumShade":113,"darkShade":114,"fullBlock":115,"upperHalfBlock":116,"lowerHalfBlock":117,"leftHalfBlock":118,"rightHalfBlock":119,"middleBlock":120,"middleDot":121});function freehandTool(editor,toolbar){"use strict";var currentColor,lastPoint;function colorChange(col){currentColor=col;}
function freehand(block,currentColorBias){editor.setBlock(block,currentColor,currentColorBias,currentColor);}
function blockLine(from,to,currentColorBias){editor.blockLine(from,to,function(block,setBlockLineBlock){setBlockLineBlock(block,currentColor);},currentColorBias,currentColor);}
function sampleBlock(block){if(block.isBlocky){if(block.isUpperHalf){editor.setCurrentColor(block.upperBlockColor);}else{editor.setCurrentColor(block.lowerBlockColor);}
return true;}
return false;}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{if(coord.shiftKey&&lastPoint){editor.startOfChunk();blockLine(lastPoint,coord,!coord.altKey);editor.endOfChunk();}else{editor.startOfFreehand();freehand(coord,!coord.altKey);}
lastPoint=coord;}}
function canvasDrag(coord){blockLine(lastPoint,coord,!coord.altKey);lastPoint=coord;}
function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeColorChangeListener(colorChange);}
function toString(){return"Freehand";}
return{"init":init,"remove":remove,"toString":toString,"uid":"freehand","sampleBlock":sampleBlock,"autoselect":true};}
AnsiEditController.addTool(freehandTool,"tools-right",102);function lineTool(editor,toolbar){"use strict";var canvas,ctx,fromBlock,oldTo,currentColor,blocks;function createBlocks(){var i,canvas,ctx,imageData;blocks=[];for(i=0;i<32;i+=1){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth(),"height":editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);if(i<16){imageData.data.set(editor.codepage.upperBlock(i),0);}else{imageData.data.set(editor.codepage.lowerBlock(i-16),0);}
ctx.putImageData(imageData,0,0);blocks[i]=canvas;}}
createBlocks();function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");}
function translateCoords(fromBlockX,fromBlockY,toBlockX,toBlockY){var blockX,blockY,width,height;if(toBlockX<fromBlockX){blockX=toBlockX;width=(fromBlockX-toBlockX+1);}else{blockX=fromBlockX;width=(toBlockX-fromBlockX+1);}
if(toBlockY<fromBlockY){blockY=toBlockY;height=(fromBlockY-toBlockY+1);}else{blockY=fromBlockY;height=(toBlockY-fromBlockY+1);}
return{"blockX":blockX,"blockY":blockY,"width":width,"height":height};}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{fromBlock=coord;}}
function clearLine(){var coords;if(oldTo){coords=translateCoords(fromBlock.blockX,fromBlock.blockY,oldTo.blockX,oldTo.blockY);ctx.clearRect((coords.blockX-1)*editor.codepage.getFontWidth(),(coords.blockY-1)*(editor.codepage.getFontHeight()/2),(coords.width+2)*editor.codepage.getFontWidth(),(coords.height+2)*(editor.codepage.getFontHeight()/2));}}
function canvasDrag(coord){var x0,y0,x1,y1,dx,dy,sx,sy,err,e2,halfHeight,fontWidth,fontHeight;x0=fromBlock.blockX;y0=fromBlock.blockY;x1=coord.blockX;y1=coord.blockY;dx=Math.abs(x1-x0);sx=(x0<x1)?1:-1;dy=Math.abs(y1-y0);sy=(y0<y1)?1:-1;err=((dx>dy)?dx:-dy)/2;clearLine();fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();halfHeight=editor.codepage.getFontHeight()/2;while(true){if(((y0+1)%2)===1){ctx.drawImage(blocks[currentColor],x0*fontWidth,y0*halfHeight);}else{ctx.drawImage(blocks[currentColor+16],x0*fontWidth,y0*halfHeight-halfHeight);}
if(x0===x1&&y0===y1){break;}
e2=err;if(e2>-dx){err-=dy;x0+=sx;}
if(e2<dy){err+=dx;y0+=sy;}}
oldTo=coord;}
function canvasUp(coord){clearLine();editor.startOfChunk();editor.blockLine(fromBlock,coord,function(block,setBlockLineBlock){setBlockLineBlock(block,currentColor);},!coord.altKey,currentColor);editor.endOfChunk();}
function canvasOut(){clearLine();}
function colorChange(col){currentColor=col;}
function fontChange(){createBlocks();}
createCanvas();editor.addFontChangeListener(fontChange);editor.addOverlayChangeListener(createCanvas);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseUpListener(canvasUp);editor.addMouseOutListener(canvasOut);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();editor.addOverlay(canvas,"line",function(){return canvas;},1);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeMouseUpListener(canvasUp);editor.removeMouseOutListener(canvasOut);editor.removeColorChangeListener(colorChange);editor.removeOverlay("line");}
function toString(){return"Line";}
return{"init":init,"remove":remove,"toString":toString,"uid":"line"};}
AnsiEditController.addTool(lineTool,"tools-right",108);AnsiEditController.addTool(charBrushTool({"name":"Shading","uid":"shading","characters":[{"charCode":176,"name":"Light"},{"charCode":177,"name":"Medium"},{"charCode":178,"name":"Dark"}]}),"tools-right",115);AnsiEditController.addTool(charBrushTool({"name":"Vertical Block","uid":"vertical-block","characters":[{"charCode":221,"name":"Left"},{"charCode":222,"name":"Right"}]}),"tools-right",118);function smudgeTool(editor,toolbar){"use strict";var blockBrush,lastPoint,canvas,ctx,imageData;function smudgeBrush(block){editor.setTextBlock(block,blockBrush.charCode,blockBrush.foreground,blockBrush.background);}
function redrawBlockBrush(){imageData.data.set(editor.codepage.fontData(blockBrush.charCode,blockBrush.foreground,blockBrush.background));ctx.putImageData(imageData,0,0);}
function iceColorChange(noblink){if(!noblink&&blockBrush){if(blockBrush.background>=8){blockBrush.background-=8;}
redrawBlockBrush();}}
function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth(),"height":editor.codepage.getFontHeight(),"style":{"border":"1px solid #444"}});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{if(coord.shiftKey&&lastPoint){editor.startOfChunk();editor.blockLine(lastPoint,coord,smudgeBrush);editor.endOfChunk();}else{blockBrush=coord;redrawBlockBrush();editor.startOfFreehand();smudgeBrush(coord);}
lastPoint=coord;}}
function canvasDrag(coord){if(blockBrush!==undefined&&lastPoint){editor.blockLine(lastPoint,coord,smudgeBrush);lastPoint=coord;}}
function rehashTool(){createCanvas();if(blockBrush!==undefined){redrawBlockBrush();}
toolbar.replaceCanvas("smudge",canvas);}
createCanvas();editor.addBlinkModeChangeListener(iceColorChange);editor.addFontChangeListener(rehashTool);editor.addPaletteChangeListener(rehashTool);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);}
function getState(){if(blockBrush!==undefined){return[blockBrush.charCode,blockBrush.foreground,blockBrush.background];}
return[];}
function setState(bytes){blockBrush={"charCode":bytes[0],"foreground":bytes[1],"background":bytes[2]};redrawBlockBrush();}
function toString(){return"Smudge";}
return{"init":init,"remove":remove,"getState":getState,"setState":setState,"toString":toString,"canvas":canvas,"uid":"smudge"};}
AnsiEditController.addTool(smudgeTool,"tools-right",100);function textTool(editor,toolbar){"use strict";var textOverlay,ctx,currentColor,cursor,startTextX,textEntryMode,cursorPositions;function createCanvas(){textOverlay=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight()});ctx=textOverlay.getContext("2d");}
function clearCursor(cursor){var fontWidth,fontHeight;fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.clearRect(cursor.textX*fontWidth,cursor.textY*fontHeight,fontWidth,fontHeight);}
function drawCursor(cursor){var fontWidth,fontHeight;fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.fillStyle=editor.getRGBAColorFor(currentColor,0.7);ctx.fillRect(cursor.textX*fontWidth,cursor.textY*fontHeight,fontWidth,fontHeight);}
function storeCursorPos(textX,textY){cursor={"textX":textX,"textY":textY};}
function updateCursorPos(coord){if(cursor){clearCursor(cursor);}
storeCursorPos(coord.textX,coord.textY);drawCursor(cursor);}
function enterTextEntryMode(keypressHandler,keydownOverrider){if(!textEntryMode){toolbar.stopListening();document.addEventListener("keypress",keypressHandler,false);document.addEventListener("keydown",keydownOverrider,false);textEntryMode=true;startTextX=cursor.textX;cursorPositions=[];}}
function leaveTextEntryMode(keypressHandler,keydownOverrider){if(textEntryMode){toolbar.startListening();document.removeEventListener("keypress",keypressHandler,false);document.removeEventListener("keydown",keydownOverrider,false);clearCursor(cursor);cursor=undefined;textEntryMode=false;}}
function keypress(evt){var keyCode,textBlock;keyCode=evt.keyCode||evt.which;if(evt.altKey){switch(keyCode){case 13:leaveTextEntryMode(keypress);break;}}else{if(keyCode===8){if(cursorPositions.length){if(editor.undo()){clearCursor(cursor);cursor=cursorPositions.pop();drawCursor(cursor);}}}else if(keyCode===13){evt.preventDefault();clearCursor(cursor);cursor.textX=startTextX;cursor.textY=Math.min(editor.getRows()-1,cursor.textY+1);drawCursor(cursor);}else if(keyCode>=32&&keyCode<=126){evt.preventDefault();editor.startOfFreehand();clearCursor(cursor);textBlock=editor.getTextBlock(cursor.textX,cursor.textY);editor.setChar(textBlock,keyCode,currentColor);cursorPositions.push({"textX":cursor.textX,"textY":cursor.textY});cursor.textX+=1;if(cursor.textX===editor.getColumns()){cursor.textX=0;cursor.textY=Math.min(editor.getRows()-1,cursor.textY+1);}
drawCursor(cursor);}}}
function keydown(evt){var keyCode;keyCode=evt.keyCode||evt.which;if(keyCode===8&&textEntryMode){evt.preventDefault();keypress(evt);}}
function canvasDown(coord){leaveTextEntryMode(keypress,keydown);updateCursorPos(coord);}
function canvasDrag(coord){updateCursorPos(coord);}
function canvasUp(coord){storeCursorPos(coord.textX,coord.textY);enterTextEntryMode(keypress,keydown);}
function colorChange(col){currentColor=col;if(cursor){drawCursor(cursor);}}
createCanvas();editor.addOverlayChangeListener(createCanvas);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseUpListener(canvasUp);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();editor.addOverlay(textOverlay,"text",function(){return textOverlay;},1);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeMouseUpListener(canvasUp);editor.removeColorChangeListener(colorChange);if(textEntryMode){leaveTextEntryMode(keypress);}
editor.removeOverlay("text");}
function toString(){return"Text";}
return{"init":init,"remove":remove,"toString":toString,"uid":"text"};}
AnsiEditController.addTool(textTool,"tools-right",116);function boxTool(editor,toolbar){"use strict";var canvas,ctx,fromBlock,oldTo,currentColor,filledBox,blocks;function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");}
function createBlocks(){var i,canvas,ctx,imageData;blocks=[];for(i=0;i<32;i+=1){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth(),"height":editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);if(i<16){imageData.data.set(editor.codepage.upperBlock(i),0);}else{imageData.data.set(editor.codepage.lowerBlock(i-16),0);}
ctx.putImageData(imageData,0,0);blocks[i]=canvas;}}
createBlocks();function translateCoords(fromBlockX,fromBlockY,toBlockX,toBlockY){var blockX,blockY,width,height;if(toBlockX<fromBlockX){blockX=toBlockX;width=(fromBlockX-toBlockX+1);}else{blockX=fromBlockX;width=(toBlockX-fromBlockX+1);}
if(toBlockY<fromBlockY){blockY=toBlockY;height=(fromBlockY-toBlockY+1);}else{blockY=fromBlockY;height=(toBlockY-fromBlockY+1);}
return{"blockX":blockX,"blockY":blockY,"width":width,"height":height};}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{fromBlock=coord;filledBox=coord.shiftKey;}}
function clearBox(){var newCoords;if(oldTo){newCoords=translateCoords(fromBlock.blockX,fromBlock.blockY,oldTo.blockX,oldTo.blockY);ctx.clearRect((newCoords.blockX-1)*editor.codepage.getFontWidth(),(newCoords.blockY-1)*(editor.codepage.getFontHeight()/2),(newCoords.width+2)*editor.codepage.getFontWidth(),(newCoords.height+2)*(editor.codepage.getFontHeight()/2));}}
function drawHorizontalLine(startX,y,width){var x,fontWidth,halfHeight;fontWidth=editor.codepage.getFontWidth();halfHeight=editor.codepage.getFontHeight()/2;if(((y+1)%2)===1){for(x=startX;x<startX+width;x+=1){ctx.drawImage(blocks[currentColor],x*fontWidth,y*halfHeight);}}else{for(x=startX;x<startX+width;x+=1){ctx.drawImage(blocks[currentColor+16],x*fontWidth,y*halfHeight-halfHeight);}}}
function drawVerticalLine(x,startY,height){var y,fontWidth,halfHeight;fontWidth=editor.codepage.getFontWidth();halfHeight=editor.codepage.getFontHeight()/2;for(y=startY;y<startY+height;y+=1){if(((y+1)%2)===1){ctx.drawImage(blocks[currentColor],x*fontWidth,y*halfHeight);}else{ctx.drawImage(blocks[currentColor+16],x*fontWidth,y*halfHeight-halfHeight);}}}
function canvasDrag(coord){var newCoord,y;clearBox();newCoord=translateCoords(fromBlock.blockX,fromBlock.blockY,coord.blockX,coord.blockY);if(filledBox){for(y=newCoord.blockY;y<newCoord.blockY+newCoord.height;y+=1){drawHorizontalLine(newCoord.blockX,y,newCoord.width);}}else{drawHorizontalLine(newCoord.blockX,newCoord.blockY,newCoord.width);drawHorizontalLine(newCoord.blockX,newCoord.blockY+newCoord.height-1,newCoord.width);drawVerticalLine(newCoord.blockX,newCoord.blockY+1,newCoord.height-2);drawVerticalLine(newCoord.blockX+newCoord.width-1,newCoord.blockY+1,newCoord.height-2);}
oldTo=coord;}
function canvasUp(coord){var newCoord,x,y,block;clearBox();editor.startOfChunk();editor.setBlocks(!coord.altKey,currentColor,function(setBlock){newCoord=translateCoords(fromBlock.blockX,fromBlock.blockY,oldTo.blockX,oldTo.blockY);if(filledBox){for(y=0;y<newCoord.height;y+=1){for(x=0;x<newCoord.width;x+=1){block=editor.getBlock(newCoord.blockX+x,newCoord.blockY+y);setBlock(block,currentColor);}}}else{for(x=0;x<newCoord.width;x+=1){block=editor.getBlock(newCoord.blockX+x,newCoord.blockY);setBlock(block,currentColor);block=editor.getBlock(newCoord.blockX+x,newCoord.blockY+newCoord.height-1);setBlock(block,currentColor);}
for(y=1;y<newCoord.height-1;y+=1){block=editor.getBlock(newCoord.blockX,newCoord.blockY+y);setBlock(block,currentColor);block=editor.getBlock(newCoord.blockX+newCoord.width-1,newCoord.blockY+y);setBlock(block,currentColor);}}});editor.endOfChunk();}
function canvasOut(){clearBox();}
function colorChange(col){currentColor=col;}
function fontChange(){createBlocks();}
createCanvas();editor.addFontChangeListener(fontChange);editor.addOverlayChangeListener(createCanvas);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseUpListener(canvasUp);editor.addMouseOutListener(canvasOut);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();editor.addOverlay(canvas,"box",function(){return canvas;},1);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeMouseUpListener(canvasUp);editor.removeMouseOutListener(canvasOut);editor.removeColorChangeListener(colorChange);editor.removeOverlay("box");}
function toString(){return"Box";}
return{"init":init,"remove":remove,"toString":toString,"uid":"box"};}
AnsiEditController.addTool(boxTool,"tools-right",120);function ellipseTool(editor,toolbar){"use strict";var canvas,ctx,fromBlock,oldTo,currentColor,filledEllipse,blocks;function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");}
function createBlocks(){var i,canvas,ctx,imageData;blocks=[];for(i=0;i<32;i+=1){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth(),"height":editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);if(i<16){imageData.data.set(editor.codepage.upperBlock(i),0);}else{imageData.data.set(editor.codepage.lowerBlock(i-16),0);}
ctx.putImageData(imageData,0,0);blocks[i]=canvas;}}
createBlocks();function translateCoords(fromBlockX,fromBlockY,toBlockX,toBlockY){return{"blockX":fromBlockX,"blockY":fromBlockY,"width":Math.abs(fromBlockX-toBlockX)+1,"height":Math.abs(fromBlockY-toBlockY)+1};}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{fromBlock=coord;filledEllipse=coord.shiftKey;}}
function clearEllipse(){var newCoords;if(oldTo){newCoords=translateCoords(fromBlock.blockX,fromBlock.blockY,oldTo.blockX,oldTo.blockY);ctx.clearRect((newCoords.blockX-newCoords.width-1)*editor.codepage.getFontWidth(),(newCoords.blockY-newCoords.height-1)*(editor.codepage.getFontHeight()/2),(newCoords.width*2+3)*editor.codepage.getFontWidth(),(newCoords.height*2+3)*(editor.codepage.getFontHeight()/2));}}
function drawEllipse(x0,y0,width,height,setPixel,setLine){var a2,b2,fa2,fb2,x,y,sigma;a2=width*width;b2=height*height;fa2=4*a2;fb2=4*b2;for(x=0,y=height,sigma=2*b2+a2*(1-2*height);b2*x<=a2*y;x+=1){if(filledEllipse){setLine(x0-x,x*2,y0+y);setLine(x0-x,x*2,y0-y);}else{setPixel(x0+x,y0+y);setPixel(x0-x,y0+y);setPixel(x0+x,y0-y);setPixel(x0-x,y0-y);}
if(sigma>=0){sigma+=fa2*(1-y);y-=1;}
sigma+=b2*((4*x)+6);}
for(x=width,y=0,sigma=2*a2+b2*(1-2*width);a2*y<=b2*x;y+=1){if(filledEllipse){setLine(x0-x,x*2,y0+y);setLine(x0-x,x*2,y0-y);}else{setPixel(x0+x,y0+y);setPixel(x0-x,y0+y);setPixel(x0+x,y0-y);setPixel(x0-x,y0-y);}
if(sigma>=0){sigma+=fb2*(1-x);x-=1;}
sigma+=a2*((4*y)+6);}}
function canvasDrag(coord){var newCoord,fontWidth,halfHeight;fontWidth=editor.codepage.getFontWidth();halfHeight=editor.codepage.getFontHeight()/2;function setPixel(px,py){if(((py+1)%2)===1){ctx.drawImage(blocks[currentColor],px*fontWidth,py*halfHeight);}else{ctx.drawImage(blocks[currentColor+16],px*fontWidth,py*halfHeight-halfHeight);}}
function setLine(fromX,lineWidth,py){var px;for(px=fromX;px<fromX+lineWidth;px+=1){if(((py+1)%2)===1){ctx.drawImage(blocks[currentColor],px*fontWidth,py*halfHeight);}else{ctx.drawImage(blocks[currentColor+16],px*fontWidth,py*halfHeight-halfHeight);}}}
clearEllipse();newCoord=translateCoords(fromBlock.blockX,fromBlock.blockY,coord.blockX,coord.blockY);drawEllipse(newCoord.blockX,newCoord.blockY,newCoord.width,newCoord.height,setPixel,setLine);oldTo=coord;}
function canvasUp(coord){clearEllipse();editor.startOfChunk();editor.setBlocks(!coord.altKey,currentColor,function(setBlock){var columns,rows,newCoord,px,block;columns=editor.getColumns();rows=editor.getRows();function setPixel(px,py){if(px>=0&&px<columns&&py>=0&&py<(rows*2)){block=editor.getBlock(px,py);setBlock(block,currentColor);}}
function setLine(fromX,lineWidth,py){for(px=fromX;px<fromX+lineWidth;px+=1){setPixel(px,py);}}
newCoord=translateCoords(fromBlock.blockX,fromBlock.blockY,oldTo.blockX,oldTo.blockY);drawEllipse(newCoord.blockX,newCoord.blockY,newCoord.width,newCoord.height,setPixel,setLine);});editor.endOfChunk();}
function canvasOut(){clearEllipse();}
function colorChange(col){currentColor=col;}
createCanvas();function fontChange(){createBlocks();}
editor.addFontChangeListener(fontChange);editor.addOverlayChangeListener(createCanvas);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseUpListener(canvasUp);editor.addMouseOutListener(canvasOut);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();editor.addOverlay(canvas,"ellipse",function(){return canvas;},1);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeMouseUpListener(canvasUp);editor.removeMouseOutListener(canvasOut);editor.removeColorChangeListener(colorChange);editor.removeOverlay("ellipse");}
function toString(){return"Ellipse";}
return{"init":init,"remove":remove,"toString":toString,"uid":"ellispe"};}
AnsiEditController.addTool(ellipseTool,"tools-right",105);function shiftColorTool(editor,toolbar){"use strict";var lastPoint,mode;mode=0;function brightenBlock(block,preserveExistingHighlights){if(block.isBlocky){if(block.isUpperHalf){if(block.upperBlockColor<8){editor.setBlock(block,block.upperBlockColor+8,preserveExistingHighlights,block.lowerBlockColor);}}else{if(block.lowerBlockColor<8){editor.setBlock(block,block.lowerBlockColor+8,preserveExistingHighlights,block.upperBlockColor);}}}else{if(block.foreground<8){editor.setChar(block,block.charCode,block.foreground+8);}}}
function darkenBlock(block){if(block.isBlocky){if(block.isUpperHalf){if(block.upperBlockColor>7){editor.setBlock(block,block.upperBlockColor-8,true,block.upperBlockColor-8);}}else{if(block.lowerBlockColor>7){editor.setBlock(block,block.lowerBlockColor-8,true,block.lowerBlockColor-8);}}}else{if(block.foreground>7){editor.setChar(block,block.charCode,block.foreground-8);}}}
function blockLine(from,to,preserveExistingHighlights){editor.blockLine(from,to,function(block){if(mode===0){brightenBlock(block,preserveExistingHighlights);}else{darkenBlock(block);}});}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else if(coord.shiftKey&&lastPoint){editor.startOfChunk();blockLine(lastPoint,coord,coord.altKey);editor.endOfChunk();}else{editor.startOfFreehand();brightenBlock(coord,coord.altKey);if(mode===0){brightenBlock(coord,coord.altKey);}else{darkenBlock(coord);}}
lastPoint=coord;}
function canvasDrag(coord){if(lastPoint){blockLine(lastPoint,coord,coord.altKey);lastPoint=coord;}}
function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);}
function getState(){return[mode];}
function setState(bytes){mode=bytes[0];}
function toString(){return"Shift Color: "+((mode===0)?"Brighten":"Darken");}
function modeChange(){mode=(mode===0)?1:0;}
return{"init":init,"remove":remove,"getState":getState,"setState":setState,"modeChange":modeChange,"toString":toString,"uid":"shift-color"};}
AnsiEditController.addTool(shiftColorTool,"tools-right",48);function mirrorTool(editor){"use strict";var mirror;mirror=false;function init(){mirror=!mirror;editor.setMirror(mirror);return false;}
function isEnabled(){return mirror;}
function getState(){return[mirror?1:0];}
function setState(bytes){if((bytes[0]===0&&mirror)||(bytes[0]===1&&!mirror)){mirror=!mirror;editor.setMirror(mirror);}}
function toString(){return"Mirror: "+(mirror?"On":"Off");}
return{"init":init,"toString":toString,"getState":getState,"setState":setState,"isEnabled":isEnabled,"uid":"mirror"};}
AnsiEditController.addTool(mirrorTool,"tools-right",109);function fillTool(editor,toolbar){"use strict";var currentColor;function colorChange(col){currentColor=col;}
function simpleFill(startBlock,targetColor,currentColorBias){var columns,rows,queue,lastRowIndex,coord,block;columns=editor.getColumns();rows=editor.getRows();queue=[{"x":startBlock.blockX,"y":startBlock.blockY}];lastRowIndex=editor.getRows()*2;editor.setBlocks(currentColorBias,currentColor,function(setBlock){while(queue.length){coord=queue.pop();block=editor.getBlock(coord.x,coord.y);if(block.isBlocky&&((block.isUpperHalf&&(block.upperBlockColor===targetColor))||(block.isLowerHalf&&(block.lowerBlockColor===targetColor)))){setBlock(block,currentColor);if(block.blockX>0){queue.push({"x":block.blockX-1,"y":block.blockY});}
if(block.blockX<columns-1){queue.push({"x":block.blockX+1,"y":block.blockY});}
if(block.blockY>0){queue.push({"x":block.blockX,"y":block.blockY-1});}
if(block.blockY<lastRowIndex-1){queue.push({"x":block.blockX,"y":block.blockY+1});}}}});}
function canvasDown(coord){var targetColor;if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{if(coord.isBlocky){targetColor=coord.isUpperHalf?coord.upperBlockColor:coord.lowerBlockColor;if(targetColor!==currentColor){editor.startOfChunk();simpleFill(coord,targetColor,!coord.altKey);editor.endOfChunk();}}}}
function init(){editor.addMouseDownListener(canvasDown);editor.addColorChangeListener(colorChange);currentColor=editor.getCurrentColor();return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeColorChangeListener(colorChange);}
function toString(){return"Fill";}
return{"init":init,"remove":remove,"toString":toString,"uid":"fill"};}
AnsiEditController.addTool(fillTool,"tools-right",110);function colorReplacementTool(editor,toolbar){"use strict";var oldColor,currentColor,lastPoint;function colorChange(col){if(currentColor!==col){oldColor=currentColor;currentColor=col;}}
function colorReplacement(block){if(block.foreground===oldColor){if(block.isblocky&&block.background===currentColor){editor.setTextBlock(block,editor.codepage.FULL_BLOCK,currentColor,0);}else{editor.setTextBlock(block,block.charCode,currentColor,block.background);}}else if(block.background===oldColor){if(block.isBlocky&&block.foreground===currentColor){editor.setTextBlock(block,editor.codepage.FULL_BLOCK,currentColor,0);}else if(currentColor>=8&&!editor.getBlinkStatus()){if(block.isBlocky){if(block.upperBlockColor===block.lowerBlockColor){if(block.upperBlockColor===currentColor){editor.setTextBlock(block,editor.codepage.FULL_BLOCK,currentColor,oldColor-8);}}else if(block.isUpperHalf){if(block.lowerBlockColor>=8){editor.setTextBlock(block,editor.codepage.UPPER_HALF_BLOCK,currentColor,block.lowerBlockColor-8);}else{editor.setTextBlock(block,editor.codepage.UPPER_HALF_BLOCK,currentColor,block.lowerBlockColor);}}else{if(block.upperBlockColor>=8){editor.setTextBlock(block,editor.codepage.LOWER_HALF_BLOCK,currentColor,block.upperBlockColor-8);}else{editor.setTextBlock(block,editor.codepage.LOWER_HALF_BLOCK,currentColor,block.upperBlockColor);}}}else{editor.setTextBlock(block,block.charCode,block.foreground,currentColor-8);}}else{editor.setTextBlock(block,block.charCode,block.foreground,currentColor);}}}
function getState(){if(oldColor!==undefined){return[oldColor];}
return[];}
function setState(bytes){oldColor=bytes[0];}
function colorReplacementLine(from,to){editor.blockLine(from,to,function(block){colorReplacement(block);});}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{if(coord.shiftKey&&lastPoint){editor.startOfChunk();colorReplacementLine(lastPoint,coord);editor.endOfChunk();}else{editor.startOfFreehand();colorReplacement(coord);}
lastPoint=coord;}}
function canvasDrag(coord){if(lastPoint){colorReplacementLine(lastPoint,coord);lastPoint=coord;}}
editor.addColorChangeListener(colorChange);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);}
function toString(){return"Color Replacement";}
function onload(){currentColor=editor.getCurrentColor();}
return{"init":init,"getState":getState,"setState":setState,"remove":remove,"toString":toString,"onload":onload,"uid":"color-replacement"};}
AnsiEditController.addTool(colorReplacementTool,"tools-right",114);function createBrushTool(editor,toolbar){"use strict";var canvas,ctx,startX,startY,oldEndX,oldEndY;function selectionPattern(){var patternCanvas,patternCtx,halfWidth,halfHeight;patternCanvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontHeight(),"height":editor.codepage.getFontHeight()});halfWidth=patternCanvas.width/2;halfHeight=patternCanvas.height/2;patternCtx=patternCanvas.getContext("2d");patternCtx.fillStyle="white";patternCtx.fillRect(0,0,halfWidth,halfHeight);patternCtx.fillRect(halfWidth,halfHeight,halfWidth,halfHeight);patternCtx.fillStyle="black";patternCtx.fillRect(halfWidth,0,halfWidth,halfHeight);patternCtx.fillRect(0,halfHeight,halfWidth,halfHeight);return patternCanvas;}
function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight(),"style":{"opacity":"0.8"}});ctx=canvas.getContext("2d");ctx.strokeStyle=ctx.createPattern(selectionPattern(),"repeat");ctx.lineWidth=editor.codepage.getFontWidth()/2;}
function translateCoords(fromTextX,fromTextY,toTextX,toTextY){var textX,textY,width,height;if(toTextX<fromTextX){textX=toTextX;width=(fromTextX-toTextX+1);}else{textX=fromTextX;width=(toTextX-fromTextX+1);}
if(toTextY<fromTextY){textY=toTextY;height=(fromTextY-toTextY+1);}else{textY=fromTextY;height=(toTextY-fromTextY+1);}
return{"textX":textX,"textY":textY,"width":width,"height":height};}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else{startX=coord.textX;startY=coord.textY;}}
function clearSelection(){var coords,fontWidth,fontHeight;if(oldEndX!==undefined&&oldEndY!==undefined){coords=translateCoords(startX,startY,oldEndX,oldEndY);fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.clearRect(coords.textX*fontWidth,coords.textY*fontHeight,coords.width*fontWidth,coords.height*fontHeight);}}
function canvasDrag(coord){var coords,fontWidth,fontHeight;clearSelection();coords=translateCoords(startX,startY,coord.textX,coord.textY);fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.strokeRect(coords.textX*fontWidth+ctx.lineWidth,coords.textY*fontHeight+ctx.lineWidth,coords.width*fontWidth-ctx.lineWidth*2,coords.height*fontHeight-ctx.lineWidth*2);oldEndX=coord.textX;oldEndY=coord.textY;}
function canvasUp(coord){var coords,pasteY,pasteX,block;clearSelection();coords=translateCoords(startX,startY,coord.textX,coord.textY);editor.fireCustomEvent("custom-brush",{"operation":"load","imageData":editor.getImageData(coords.textX,coords.textY,coords.width,coords.height)});if(coord.altKey){editor.startOfChunk();for(pasteY=0;pasteY<coords.height;pasteY+=1){for(pasteX=0;pasteX<coords.width;pasteX+=1){block=editor.getTextBlock(coords.textX+pasteX,coords.textY+pasteY);editor.setTextBlock(block,editor.codepage.SPACE,block.foreground,0);}}
editor.endOfChunk();}}
function canvasOut(){clearSelection();}
createCanvas();editor.addOverlayChangeListener(createCanvas);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseUpListener(canvasUp);editor.addMouseOutListener(canvasOut);editor.addOverlay(canvas,"create-brush",function(){return canvas;},1);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeMouseUpListener(canvasUp);editor.removeMouseOutListener(canvasOut);editor.removeOverlay("create-brush");}
function toString(){return"Create Custom Brush";}
return{"init":init,"remove":remove,"toString":toString,"uid":"create-brush"};}
AnsiEditController.addTool(createBrushTool,"tools-right",99);function customBrushTool(editor,toolbar){"use strict";var canvas,ctx,stampImageData,stampCanvas,stampX,stampY;function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight(),"style":{"opacity":"0.8"}});ctx=canvas.getContext("2d");}
function clearStamp(){var fontWidth,fontHeight;if(stampCanvas){fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.clearRect((stampX-Math.floor(stampImageData.width/2))*fontWidth,(stampY-Math.floor(stampImageData.height/2))*fontHeight,stampCanvas.width,stampCanvas.height);}}
function redrawStamp(textX,textY){var fontWidth,fontHeight;clearStamp();if(stampCanvas){fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.drawImage(stampCanvas,(textX-Math.floor(stampImageData.width/2))*fontWidth,(textY-Math.floor(stampImageData.height/2))*fontHeight);}
stampX=textX;stampY=textY;}
function canvasMove(coord){redrawStamp(coord.textX,coord.textY);}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else if(stampCanvas){editor.startOfChunk();editor.putImageData(stampImageData,coord.textX-Math.floor(stampImageData.width/2),coord.textY-Math.floor(stampImageData.height/2),!coord.altKey);editor.endOfChunk();}}
function canvasOut(){clearStamp();stampX=undefined;stampY=undefined;}
function changeBrush(imageData){clearStamp();stampImageData=imageData;if(stampImageData){stampCanvas=editor.renderImageData(stampImageData,true);toolbar.giveFocus("custom-brush");}else{stampCanvas=undefined;}}
function flipBrushX(){var newStampImageData,x,y,block,index,newIndex;if(stampImageData){newStampImageData={"width":stampImageData.width,"height":stampImageData.height,"data":new Uint8Array(stampImageData.data.length)};for(y=0;y<stampImageData.height;y+=1){for(x=0;x<stampImageData.width;x+=1){index=(y*stampImageData.width+x)*3;block=stampImageData.data.subarray(index,index+3);block[0]=editor.codepage.getFlippedTextX(block[0]);newIndex=(y*stampImageData.width+(stampImageData.width-(x+1)))*3;newStampImageData.data.set(block,newIndex);}}
toolbar.giveFocus("custom-brush");stampImageData=newStampImageData;stampCanvas=editor.renderImageData(stampImageData,true);if(stampX&&stampY){redrawStamp(stampX,stampY);}
editor.fireCustomEvent("custom-brush",{"operation":"changed","imageData":stampImageData});toolbar.flashGreen("flip-brush-x");}else{toolbar.flashRed("flip-brush-x");}}
function flipBrushY(){var newStampImageData,x,y,block,index,newIndex;if(stampImageData){newStampImageData={"width":stampImageData.width,"height":stampImageData.height,"data":new Uint8Array(stampImageData.data.length)};for(x=0;x<stampImageData.width;x+=1){for(y=0;y<stampImageData.height;y+=1){index=(y*stampImageData.width+x)*3;block=stampImageData.data.subarray(index,index+3);block[0]=editor.codepage.getFlippedTextY(block[0]);newIndex=((stampImageData.height-(y+1))*stampImageData.width+x)*3;newStampImageData.data.set(block,newIndex);}}
toolbar.giveFocus("custom-brush");stampImageData=newStampImageData;stampCanvas=editor.renderImageData(stampImageData,true);if(stampX&&stampY){redrawStamp(stampX,stampY);}
editor.fireCustomEvent("custom-brush",{"operation":"changed","imageData":stampImageData});toolbar.flashGreen("flip-brush-y");}else{toolbar.flashRed("flip-brush-y");}}
editor.addCustomEventListener("custom-brush",function(evt){switch(evt.operation){case"load":changeBrush(evt.imageData);break;case"flipx":flipBrushX();break;case"flipy":flipBrushY();break;default:}});function blinkModeChange(noblink){var i;if(!noblink&&stampImageData!==undefined){for(i=2;i<stampImageData.data.length;i+=3){if(stampImageData.data[i]>=8){stampImageData.data[i]-=8;}}
stampCanvas=editor.renderImageData(stampImageData,true);if(stampX&&stampY){redrawStamp(stampX,stampY);}
editor.fireCustomEvent("custom-brush",{"operation":"changed","imageData":stampImageData});}}
function fontChange(){if(stampImageData){stampCanvas=editor.renderImageData(stampImageData,true);if(stampX&&stampY){redrawStamp(stampX,stampY);}}}
createCanvas();editor.addOverlayChangeListener(createCanvas);editor.addFontChangeListener(fontChange);editor.addBlinkModeChangeListener(blinkModeChange);function init(){editor.addMouseMoveListener(canvasMove);editor.addMouseDownListener(canvasDown);editor.addMouseOutListener(canvasOut);editor.addOverlay(canvas,"custom-brush",function(){return canvas;},1);return true;}
function getState(){var output,i;if(stampImageData!==undefined){output=[];output.push(stampImageData.width&0xff);output.push(stampImageData.width>>8);output.push(stampImageData.height&0xff);output.push(stampImageData.height>>8);for(i=0;i<stampImageData.data.length;i+=1){output.push(stampImageData.data[i]);}
return output;}
return[];}
function setState(bytes){stampImageData={"width":bytes[0]+(bytes[1]<<8),"height":bytes[2]+(bytes[3]<<8),"data":bytes.subarray(4,bytes.length)};editor.fireCustomEvent("custom-brush",{"operation":"changed","imageData":stampImageData});stampCanvas=editor.renderImageData(stampImageData,true);}
function remove(){editor.removeMouseMoveListener(canvasMove);editor.removeMouseDownListener(canvasDown);editor.removeMouseOutListener(canvasOut);editor.removeOverlay("custom-brush");}
function toString(){return"Custom Brush";}
return{"init":init,"getState":getState,"setState":setState,"remove":remove,"toString":toString,"uid":"custom-brush"};}
AnsiEditController.addTool(customBrushTool,"tools-right",112);function flipBrushXTool(editor){"use strict";function init(){editor.fireCustomEvent("custom-brush",{"operation":"flipx"});return false;}
function toString(){return"Custom Brush FlipX";}
return{"init":init,"toString":toString,"uid":"flip-brush-x"};}
AnsiEditController.addTool(flipBrushXTool,"tools-right",91);function flipBrushYTool(editor){"use strict";function init(){editor.fireCustomEvent("custom-brush",{"operation":"flipy"});return false;}
function toString(){return"Custom Brush FlipY";}
return{"init":init,"toString":toString,"uid":"flip-brush-y"};}
AnsiEditController.addTool(flipBrushYTool,"tools-right",93);function gridTool(editor){"use strict";var gridLight,gridDark,gridMode;function createGrid(rgba,highlightedRGBA,midToneRGBA){var columns,rows,fontWidth,fontHeight,canvas,ctx,imageData,byteWidth,y,x,i;columns=editor.getColumns();rows=editor.getRows();fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();canvas=ElementHelper.create("canvas",{"width":columns*fontWidth,"height":rows*fontHeight});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);byteWidth=canvas.width*4;for(y=1;y<rows;y+=1){for(x=0,i=y*fontHeight*byteWidth;x<canvas.width;x+=1,i+=4){imageData.data.set(rgba,i);}}
for(x=1;x<columns;x+=1){for(y=0,i=x*fontWidth*4;y<canvas.height;y+=1,i+=byteWidth){if(x%40===0){imageData.data.set(highlightedRGBA,i);}else if(x%20===0){imageData.data.set(midToneRGBA,i);}else{imageData.data.set(rgba,i);}}}
ctx.putImageData(imageData,0,0);return canvas;}
gridMode=0;function createGrids(){gridLight=createGrid(new Uint8Array([255,255,255,64]),new Uint8Array([255,255,255,200]),new Uint8Array([255,255,255,100]));gridDark=createGrid(new Uint8Array([0,0,0,64]),new Uint8Array([0,0,0,255]),new Uint8Array([0,0,0,180]));}
function redraw(){switch(gridMode){case 1:return gridLight;case 2:return gridDark;default:return undefined;}}
function reapplyGrid(){switch(gridMode){case 1:editor.addOverlay(gridLight,"grid",redraw,3);break;case 2:editor.addOverlay(gridDark,"grid",redraw,3);break;default:editor.removeOverlay("grid");break;}}
createGrids();editor.addOverlayChangeListener(createGrids);function init(){gridMode=(gridMode===2)?0:gridMode+1;reapplyGrid();return false;}
function shiftKey(){gridMode=(gridMode===0)?2:gridMode-1;reapplyGrid();return false;}
function toString(){switch(gridMode){case 1:return"Grid: Light";case 2:return"Grid: Dark";default:return"Grid: Off";}}
function getState(){return[gridMode];}
function setState(bytes){if(gridMode!==bytes[0]){gridMode=bytes[0];reapplyGrid();}}
function isEnabled(){return gridMode>0;}
return{"init":init,"shiftKey":shiftKey,"toString":toString,"isEnabled":isEnabled,"getState":getState,"setState":setState,"uid":"grid"};}
AnsiEditController.addTool(gridTool,"tools-right",103);function showInvisiblesTool(editor,toolbar){"use strict";var RGBA_PALETTE,columns,rows,invisiblesNull,invisiblesSpace,invisiblesFullBlock,invisiblesNoBreakSpace,invisiblesNullCtx,invisiblesSpaceCtx,invisiblesFullBlockCtx,invisiblesNoBreakSpaceCtx,invisiblesMode,blocks,lastPoint;RGBA_PALETTE=[new Uint8Array([0,0,0,255]),new Uint8Array([0,0,170,255]),new Uint8Array([0,170,0,255]),new Uint8Array([0,170,170,255]),new Uint8Array([170,0,0,255]),new Uint8Array([170,0,170,255]),new Uint8Array([170,85,0,255]),new Uint8Array([170,170,170,255]),new Uint8Array([85,85,85,255]),new Uint8Array([85,85,255,255]),new Uint8Array([85,255,85,255]),new Uint8Array([85,255,255,255]),new Uint8Array([255,85,85,255]),new Uint8Array([255,85,255,255]),new Uint8Array([255,255,85,255]),new Uint8Array([255,255,255,255])];function createBlocks(){var i,canvas,ctx,imageData;blocks=[];for(i=0;i<16;i+=1){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth(),"height":editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);imageData.data.set(editor.codepage.fontDataRGBA(editor.codepage.FULL_BLOCK,RGBA_PALETTE[i],RGBA_PALETTE[i]),0);ctx.putImageData(imageData,0,0);blocks[i]=canvas;}}
function draw(ctx,block,index){ctx.drawImage(block,(index/3%columns)*editor.codepage.getFontWidth(),Math.floor(index/3/columns)*editor.codepage.getFontHeight());}
function clear(ctx,index){var fontWidth,fontHeight;fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();ctx.clearRect((index/3%columns)*fontWidth,Math.floor(index/3/columns)*fontHeight,fontWidth,fontHeight);}
function createCanvases(){var width,height;columns=editor.getColumns();rows=editor.getRows();width=columns*editor.codepage.getFontWidth();height=rows*editor.codepage.getFontHeight();invisiblesNull=ElementHelper.create("canvas",{"width":width,"height":height,"style":{"backgroundColor":"rgba(0, 0, 0, 0.7)"}});invisiblesSpace=ElementHelper.create("canvas",{"width":width,"height":height,"style":{"backgroundColor":"rgba(0, 0, 0, 0.7)"}});invisiblesFullBlock=ElementHelper.create("canvas",{"width":width,"height":height,"style":{"backgroundColor":"rgba(0, 0, 0, 0.7)"}});invisiblesNoBreakSpace=ElementHelper.create("canvas",{"width":width,"height":height,"style":{"backgroundColor":"rgba(0, 0, 0, 0.7)"}});invisiblesNullCtx=invisiblesNull.getContext("2d");invisiblesSpaceCtx=invisiblesSpace.getContext("2d");invisiblesFullBlockCtx=invisiblesFullBlock.getContext("2d");invisiblesNoBreakSpaceCtx=invisiblesNoBreakSpace.getContext("2d");}
function addOverlays(){function redraw(){createCanvases();switch(invisiblesMode){case 0:return invisiblesNull;case 1:return invisiblesSpace;case 2:return invisiblesFullBlock;case 3:return invisiblesNoBreakSpace;default:}}
switch(invisiblesMode){case 0:editor.addOverlay(invisiblesNull,"show-invisibles",redraw,1);break;case 1:editor.addOverlay(invisiblesSpace,"show-invisibles",redraw,1);break;case 2:editor.addOverlay(invisiblesFullBlock,"show-invisibles",redraw,1);break;case 3:editor.addOverlay(invisiblesNoBreakSpace,"show-invisibles",redraw,1);break;default:}}
function readImageData(){var imageData,i;imageData=editor.getImageData(0,0,columns,rows);for(i=0;i<imageData.data.length;i+=3){switch(imageData.data[i]){case editor.codepage.NULL:draw(invisiblesNullCtx,blocks[12],i);break;case editor.codepage.SPACE:draw(invisiblesSpaceCtx,blocks[10],i);break;case editor.codepage.FULL_BLOCK:draw(invisiblesFullBlockCtx,blocks[9],i);break;case editor.codepage.NO_BREAK_SPACE:draw(invisiblesNoBreakSpaceCtx,blocks[14],i);break;default:}}}
invisiblesMode=0;createBlocks();createCanvases();readImageData();function update(charCode,oldCharCode,index){if(charCode!==oldCharCode){switch(oldCharCode){case editor.codepage.NULL:clear(invisiblesNullCtx,index);break;case editor.codepage.SPACE:clear(invisiblesSpaceCtx,index);break;case editor.codepage.FULL_BLOCK:clear(invisiblesFullBlockCtx,index);break;case editor.codepage.NO_BREAK_SPACE:clear(invisiblesNoBreakSpaceCtx,index);break;case undefined:clear(invisiblesNullCtx,index);clear(invisiblesSpaceCtx,index);clear(invisiblesFullBlockCtx,index);clear(invisiblesNoBreakSpaceCtx,index);break;default:}
switch(charCode){case editor.codepage.NULL:draw(invisiblesNullCtx,blocks[12],index);break;case editor.codepage.SPACE:draw(invisiblesSpaceCtx,blocks[10],index);break;case editor.codepage.FULL_BLOCK:draw(invisiblesFullBlockCtx,blocks[9],index);break;case editor.codepage.NO_BREAK_SPACE:draw(invisiblesNoBreakSpaceCtx,blocks[14],index);break;default:}}}
function invisiblesBrush(block){var color;color=(block.charCode===editor.codepage.FULL_BLOCK)?block.foreground:block.background;if(!editor.getBlinkStatus()&&(color>=8)&&(invisiblesMode!==3)){color-=8;}
switch(invisiblesMode){case 0:editor.setTextBlock(block,editor.codepage.NULL,color,color);update(editor.codepage.NULL,block.charCode,block.index);break;case 1:editor.setTextBlock(block,editor.codepage.SPACE,color,color);update(editor.codepage.SPACE,block.charCode,block.index);break;case 2:editor.setTextBlock(block,editor.codepage.FULL_BLOCK,color,color);update(editor.codepage.FULL_BLOCK,block.charCode,block.index);break;case 3:editor.setTextBlock(block,editor.codepage.NO_BREAK_SPACE,color,color);update(editor.codepage.NO_BREAK_SPACE,block.charCode,block.index);break;default:}}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else if(coord.shiftKey&&lastPoint){editor.startOfChunk();editor.blockLine(lastPoint,coord,invisiblesBrush);editor.endOfChunk();}else{editor.startOfFreehand();invisiblesBrush(coord);}
lastPoint=coord;}
function canvasDrag(coord){if(lastPoint){editor.blockLine(lastPoint,coord,invisiblesBrush);lastPoint=coord;}}
function fontChange(){createBlocks();}
editor.addFontChangeListener(fontChange);editor.addOverlayChangeListener(createCanvases);editor.addCanvasDrawListener(function(block){update(block[0],undefined,block[3]);});function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);addOverlays();return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);editor.removeOverlay("show-invisibles");}
function getState(){return[invisiblesMode];}
function setState(bytes){invisiblesMode=bytes[0];if(editor.isOverlayVisible("show-invisibles")){addOverlays();}}
function modeChange(shiftKey){editor.removeOverlay("show-invisibles");if(!shiftKey){invisiblesMode+=1;if(invisiblesMode===4){invisiblesMode=0;}}else{invisiblesMode-=1;if(invisiblesMode<0){invisiblesMode=3;}}
addOverlays();}
function toString(){switch(invisiblesMode){case 0:return"Show: Null";case 1:return"Show: Space";case 2:return"Show: Full Block";case 3:return"Show: No-Break Space";}}
return{"init":init,"remove":remove,"getState":getState,"setState":setState,"modeShiftKey":true,"modeChange":modeChange,"toString":toString,"uid":"show-invisibles"};}
AnsiEditController.addTool(showInvisiblesTool,"tools-right",121);function undoTool(editor,toolbar){"use strict";function init(){if(editor.undo()){toolbar.flashGreen("undo");}else{toolbar.flashRed("undo");}
return false;}
function shiftKey(){if(editor.redo()){toolbar.flashGreen("undo");}else{toolbar.flashRed("undo");}
return false;}
function toString(){return"Undo / Redo";}
return{"init":init,"shiftKey":shiftKey,"toString":toString,"uid":"undo"};}
AnsiEditController.addTool(undoTool,"tools-right",122);function loadReferenceTool(editor,toolbar){"use strict";function init(){var modal,divFileZone,paragraph;divFileZone=ElementHelper.create("div",{"className":"file-zone"});paragraph=ElementHelper.create("p",{"textContent":"Drag and drop an image here."});function dismiss(){modal.remove();toolbar.startListening();}
divFileZone.addEventListener("dragover",function(evt){evt.stopPropagation();evt.preventDefault();evt.dataTransfer.dropEffect="copy";},false);divFileZone.addEventListener("drop",function(evt){var reader;evt.stopPropagation();evt.preventDefault();if(evt.dataTransfer.files.length){reader=new FileReader();reader.onload=function(data){editor.fireCustomEvent("reference",data.target.result);};reader.readAsDataURL(evt.dataTransfer.files[0]);dismiss();}},false);modal=modalBox();divFileZone.appendChild(paragraph);modal.addPanel(divFileZone);modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Load Reference Image";}
return{"init":init,"toString":toString,"uid":"loadreference"};}
function referenceTool(editor,toolbar){"use strict";var canvas,referenceMode,dataUrl;referenceMode=0;function getOpacity(){switch(referenceMode){case 1:return"0.25";case 2:return"0.50";case 3:return"0.75";default:return"1.0";}}
function createCanvas(){canvas=ElementHelper.create("canvas",{"width":editor.getColumns()*editor.codepage.getFontWidth(),"height":editor.getRows()*editor.codepage.getFontHeight(),"style":{"backgroundPosition":"top left","backgroundRepeat":"no-repeat","backgroundSize":"contain"}});if(dataUrl!==undefined){canvas.style.backgroundImage="url("+dataUrl+")";canvas.style.opacity=getOpacity();}}
editor.addCustomEventListener("reference",function(newDataUrl){dataUrl=newDataUrl;canvas.style.backgroundImage="url("+dataUrl+")";if(referenceMode===0){toolbar.giveFocus("reference");}},false);createCanvas();editor.addOverlayChangeListener(createCanvas);function init(){referenceMode+=1;switch(referenceMode){case 1:canvas.style.opacity=getOpacity();editor.addOverlay(canvas,"reference",function(){return canvas;},2);break;case 2:canvas.style.opacity=getOpacity();break;case 3:canvas.style.opacity=getOpacity();break;default:editor.removeOverlay("reference");referenceMode=0;}
return false;}
function shiftKey(){referenceMode-=1;switch(referenceMode){case 0:editor.removeOverlay("reference");break;case 1:canvas.style.opacity=getOpacity();break;case 2:canvas.style.opacity=getOpacity();break;default:editor.addOverlay(canvas,"reference",function(){return canvas;},2);referenceMode=3;canvas.style.opacity=getOpacity();}
return false;}
function toString(){switch(referenceMode){case 1:return"Reference: 25%";case 2:return"Reference: 50%";case 3:return"Reference: 75%";default:return"Reference: off";}}
function isEnabled(){return referenceMode>0;}
return{"init":init,"shiftKey":shiftKey,"toString":toString,"isEnabled":isEnabled,"uid":"reference"};}
(function(){"use strict";document.addEventListener("keydown",(function(element,callback){var index,listener;index=0;listener=function(evt){index=((evt.keyCode||evt.which)===[38,38,40,40,37,39,37,39,66,65][index])?index+1:0;if(index===10){callback();element.removeEventListener("keydown",listener);}};return listener;}(document,function(){AnsiEditController.addTool(loadReferenceTool,"tools-left");AnsiEditController.addTool(referenceTool,"tools-right",undefined);})),false);}());function paletteTool(editor){"use strict";var selectionCanvas,paletteCanvas,toolCanvas,quickAccess,oldColor,currentColor;function createSelectionCanvas(){var canvas,ctx;canvas=ElementHelper.create("canvas",{"width":20,"height":20});ctx=canvas.getContext("2d");ctx.fillStyle="white";ctx.fillRect(0,0,canvas.width,1);ctx.fillRect(0,canvas.height-1,canvas.width,1);ctx.fillRect(0,0,1,canvas.height);ctx.fillRect(canvas.width-1,0,1,canvas.height);return canvas;}
function mousedown(evt){var pos,color;pos=evt.currentTarget.getBoundingClientRect();color=((1-Math.floor((evt.clientY-pos.top-40)/20)))*8+Math.floor((evt.clientX-pos.left)/20);if(color>=0&&color<=15){editor.setCurrentColor(color);}}
function mousemove(evt){var mouseButton;evt.preventDefault();mouseButton=(evt.buttons!==undefined)?evt.buttons:evt.which;if(mouseButton){mousedown(evt);}}
function createCanvas(){var canvas,ctx,i;canvas=ElementHelper.create("canvas",{"width":160,"height":80});ctx=canvas.getContext("2d");for(i=0;i<16;i+=1){ctx.fillStyle=editor.codepage.styleRGBA(i,1);ctx.fillRect((i%8)*canvas.width/8,(i<8)?60:40,canvas.width/8,canvas.height/4);}
return canvas;}
function redrawCurrentColor(){var ctx;ctx=paletteCanvas.getContext("2d");ctx.fillStyle=editor.codepage.styleRGBA(currentColor,1);ctx.fillRect(0,0,paletteCanvas.width,40);}
function redrawTools(){var toolCtx,quickAccessCtx;toolCtx=toolCanvas.getContext("2d");quickAccessCtx=quickAccess.getContext("2d");toolCtx.drawImage(paletteCanvas,0,0);quickAccessCtx.drawImage(paletteCanvas,0,0);if(currentColor<8){toolCtx.drawImage(selectionCanvas,currentColor*20,60);quickAccessCtx.drawImage(selectionCanvas,currentColor*20,60);}else{toolCtx.drawImage(selectionCanvas,(currentColor-8)*20,40);quickAccessCtx.drawImage(selectionCanvas,(currentColor-8)*20,40);}}
function colorChange(color){oldColor=currentColor;currentColor=color;redrawCurrentColor();redrawTools();}
function paletteChange(){paletteCanvas=createCanvas();redrawCurrentColor();redrawTools();}
oldColor=0;paletteCanvas=createCanvas();toolCanvas=ElementHelper.create("canvas",{"width":160,"height":80,"style":{"cursor":"crosshair"}});quickAccess=ElementHelper.create("canvas",{"width":160,"height":80,"style":{"cursor":"crosshair"}});toolCanvas.addEventListener("mousedown",mousedown,false);toolCanvas.addEventListener("mousemove",mousemove,false);quickAccess.addEventListener("mousedown",mousedown,false);quickAccess.addEventListener("mousemove",mousemove,false);selectionCanvas=createSelectionCanvas();editor.addColorChangeListener(colorChange);editor.addPaletteChangeListener(paletteChange);function init(){return false;}
function onload(){currentColor=editor.getCurrentColor();redrawCurrentColor();redrawTools();}
function toString(){return"Palette";}
function setColor(color,shiftKey){if(shiftKey||color===currentColor){color+=8;}
editor.setCurrentColor(color);}
function swapColors(){editor.setCurrentColor(oldColor);}
function setColor1(shiftKey){setColor(0,shiftKey);}
function setColor2(shiftKey){setColor(1,shiftKey);}
function setColor3(shiftKey){setColor(2,shiftKey);}
function setColor4(shiftKey){setColor(3,shiftKey);}
function setColor5(shiftKey){setColor(4,shiftKey);}
function setColor6(shiftKey){setColor(5,shiftKey);}
function setColor7(shiftKey){setColor(6,shiftKey);}
function setColor8(shiftKey){setColor(7,shiftKey);}
return{"init":init,"toString":toString,"uid":"palette","canvas":toolCanvas,"quickAccess":quickAccess,"hideText":true,"swapColors":swapColors,"setColor1":setColor1,"setColor2":setColor2,"setColor3":setColor3,"setColor4":setColor4,"setColor5":setColor5,"setColor6":setColor6,"setColor7":setColor7,"setColor8":setColor8,"onload":onload};}
AnsiEditController.addTool(paletteTool,"tools-left",undefined,{"swapColors":9,"setColor1":49,"setColor2":50,"setColor3":51,"setColor4":52,"setColor5":53,"setColor6":54,"setColor7":55,"setColor8":56});function shadedPaletteTool(editor,toolbar){"use strict";var currentColor,lastPoint,canvas,quickAccess,quickAccessCtx,selectionCanvas,ctx,imageData,shadedPaletteCanvases,selection;function updateCanvas(){ctx.drawImage(shadedPaletteCanvases[currentColor],0,0);quickAccessCtx.drawImage(shadedPaletteCanvases[currentColor],0,0);if(selection!==undefined){if(selection.color===currentColor){ctx.drawImage(selectionCanvas,selection.x*editor.codepage.getFontWidth()*4,selection.y*editor.codepage.getFontHeight());quickAccessCtx.drawImage(selectionCanvas,selection.x*editor.codepage.getFontWidth()*4,selection.y*editor.codepage.getFontHeight());}}}
function colorChange(col){var noblink,fontWidth,fontHeight,extendedPaletteCtx,imageData,i,bg,y;noblink=editor.getBlinkStatus();fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();if(shadedPaletteCanvases[col]===undefined){shadedPaletteCanvases[col]=ElementHelper.create("canvas",{"width":canvas.width,"height":canvas.height});extendedPaletteCtx=shadedPaletteCanvases[col].getContext("2d");imageData=extendedPaletteCtx.createImageData(fontWidth,fontHeight);for(bg=0,y=0;bg<8;bg+=1){if(col!==bg){imageData.data.set(editor.codepage.fontData(editor.codepage.FULL_BLOCK,col,bg));for(i=0;i<4;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.DARK_SHADE,col,bg));for(i=4;i<8;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.MEDIUM_SHADE,col,bg));for(i=8;i<12;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.LIGHT_SHADE,col,bg));for(i=12;i<16;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.FULL_BLOCK,bg,col));for(i=16;i<20;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
y+=fontHeight;}}
if(col<8||noblink){for(bg=8;bg<16;bg+=1){if(col!==bg){imageData.data.set(editor.codepage.fontData(editor.codepage.FULL_BLOCK,col,bg-8));for(i=0;i<4;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.LIGHT_SHADE,bg,col));for(i=4;i<8;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.MEDIUM_SHADE,bg,col));for(i=8;i<12;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.DARK_SHADE,bg,col));for(i=12;i<16;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
imageData.data.set(editor.codepage.fontData(editor.codepage.FULL_BLOCK,bg,col));for(i=16;i<20;i+=1){extendedPaletteCtx.putImageData(imageData,i*fontWidth,y);}
y+=fontHeight;}}}else{extendedPaletteCtx.fillStyle="black";extendedPaletteCtx.fillRect(0,y,shadedPaletteCanvases[col].width,shadedPaletteCanvases[col].height-y);}}
currentColor=col;updateCanvas();}
function createSelectionCanvas(){var canvas,ctx;canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth()*4,"height":editor.codepage.getFontHeight()});ctx=canvas.getContext("2d");ctx.fillStyle="white";ctx.fillRect(0,0,canvas.width,1);ctx.fillRect(0,canvas.height-1,canvas.width,1);ctx.fillRect(0,0,1,canvas.height);ctx.fillRect(canvas.width-1,0,1,canvas.height);return canvas;}
function getShading(value){switch(value){case 1:return editor.codepage.DARK_SHADE;case 2:return editor.codepage.MEDIUM_SHADE;case 3:return editor.codepage.LIGHT_SHADE;default:return editor.codepage.FULL_BLOCK;}}
function selectFromEvent(evt){var noblink,pos,x,y,otherCol,tempCurrentColor;noblink=editor.getBlinkStatus();pos=evt.currentTarget.getBoundingClientRect();x=Math.min(Math.floor((evt.clientX-pos.left+1)/(editor.codepage.getFontWidth()*4)),4);y=Math.min(Math.floor((evt.clientY-pos.top+1)/editor.codepage.getFontHeight()),14);otherCol=(y<currentColor)?y:y+1;if(x===0&&((currentColor<8)||(noblink))){if(otherCol>=8){otherCol-=8;}
selection={"color":currentColor,"x":x,"y":y,"fg":currentColor,"bg":otherCol,"code":editor.codepage.FULL_BLOCK};updateCanvas();}else if(x===4&&((currentColor<8)||(noblink))){if(!noblink&&currentColor>=8){if(currentColor===otherCol||currentColor===otherCol+8){tempCurrentColor=0;}else{tempCurrentColor=currentColor-8;}}else{tempCurrentColor=currentColor;}
selection={"color":currentColor,"x":x,"y":y,"fg":otherCol,"bg":tempCurrentColor,"code":editor.codepage.FULL_BLOCK};updateCanvas();}else if(x===4&&otherCol<8){selection={"color":currentColor,"x":x,"y":y,"fg":otherCol,"bg":tempCurrentColor,"code":editor.codepage.FULL_BLOCK};updateCanvas();}else if(otherCol<8){selection={"color":currentColor,"x":x,"y":y,"fg":currentColor,"bg":otherCol,"code":getShading((otherCol<8)?x:(4-x))};updateCanvas();}else if(noblink||currentColor<8){selection={"color":currentColor,"x":x,"y":y,"fg":otherCol,"bg":currentColor,"code":getShading((otherCol<8)?x:(4-x))};updateCanvas();}}
function mousedown(evt){evt.preventDefault();selectFromEvent(evt);}
function mousemove(evt){var mouseButton;evt.preventDefault();mouseButton=(evt.buttons!==undefined)?evt.buttons:evt.which;if(mouseButton){evt.preventDefault();selectFromEvent(evt);}}
function createCanvases(){canvas=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth()*20,"height":editor.codepage.getFontHeight()*15,"style":{"cursor":"crosshair"}});quickAccess=ElementHelper.create("canvas",{"width":editor.codepage.getFontWidth()*20,"height":editor.codepage.getFontHeight()*15,"style":{"cursor":"crosshair"}});selectionCanvas=createSelectionCanvas();ctx=canvas.getContext("2d");quickAccessCtx=quickAccess.getContext("2d");imageData=ctx.createImageData(canvas.width,canvas.height);shadedPaletteCanvases=new Array(16);canvas.addEventListener("mousedown",mousedown,false);canvas.addEventListener("mousemove",mousemove,false);quickAccess.addEventListener("mousedown",function(evt){mousedown(evt);toolbar.giveFocus("shaded-palette");},false);quickAccess.addEventListener("mousemove",mousemove,false);}
function extendedPaletteBrush(block){editor.setTextBlock(block,selection.code,selection.fg,selection.bg);}
function sampleBlock(coord){if(coord.charCode>=editor.codepage.LIGHT_SHADE&&coord.charCode<=editor.codepage.DARK_SHADE){if(coord.foreground<8){editor.setCurrentColor(coord.foreground);selection={"color":coord.foreground,"x":editor.codepage.DARK_SHADE-coord.charCode+1,"y":coord.background-((coord.background>coord.foreground)?1:0),"fg":coord.foreground,"bg":coord.background,"code":coord.charCode};}else{editor.setCurrentColor(coord.background);selection={"color":coord.background,"x":coord.charCode-editor.codepage.LIGHT_SHADE+1,"y":coord.foreground-((coord.foreground>coord.background)?1:0),"fg":coord.foreground,"bg":coord.background,"code":coord.charCode};}
updateCanvas();return true;}
return false;}
function canvasDown(coord){if(coord.ctrlKey){toolbar.sampleBlock(coord);}else if(selection!==undefined){if(coord.shiftKey&&lastPoint){editor.startOfChunk();editor.blockLine(lastPoint,coord,extendedPaletteBrush);editor.endOfChunk();}else{editor.startOfFreehand();extendedPaletteBrush(coord);}
lastPoint=coord;}}
function canvasDrag(coord){if(selection!==undefined){editor.blockLine(lastPoint,coord,extendedPaletteBrush);lastPoint=coord;}}
function onload(){colorChange(editor.getCurrentColor());}
function iceColorChange(){var i;for(i=8;i<16;i+=1){delete shadedPaletteCanvases[i];}
if(currentColor>=8){if(selection!==undefined){if(selection.bg>=8){selection=undefined;}}
colorChange(currentColor);}}
function rehashTool(){createCanvases();colorChange(editor.getCurrentColor());toolbar.replaceCanvas("shaded-palette",canvas);toolbar.replaceQuickAccess("shaded-palette",quickAccess);}
createCanvases();editor.addBlinkModeChangeListener(iceColorChange);editor.addColorChangeListener(colorChange,false);editor.addFontChangeListener(rehashTool);editor.addPaletteChangeListener(rehashTool);function init(){editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);return true;}
function remove(){editor.removeMouseDownListener(canvasDown);editor.removeMouseDragListener(canvasDrag);}
function getState(){if(selection!==undefined){return[selection.color,selection.x,selection.y,selection.fg,selection.bg,selection.code];}
return[];}
function setState(bytes){selection={"color":bytes[0],"x":bytes[1],"y":bytes[2],"fg":bytes[3],"bg":bytes[4],"code":bytes[5]};updateCanvas();}
function toString(){return"Shaded Palette";}
return{"onload":onload,"init":init,"remove":remove,"getState":getState,"setState":setState,"sampleBlock":sampleBlock,"toString":toString,"canvas":canvas,"quickAccess":quickAccess,"uid":"shaded-palette"};}
AnsiEditController.addTool(shadedPaletteTool,"tools-left",32);function iceColorsTool(editor,toolbar){"use strict";var noblink;noblink=false;function changeMode(newMode){noblink=newMode;editor.setBlinkStatus(noblink);}
editor.addBlinkModeChangeListener(function(value){if(value!==noblink){noblink=value;toolbar.updateStatus("icecolors");}},false);function init(){var modal;function dismiss(){modal.remove();toolbar.startListening();}
if(!noblink){changeMode(true);}else{modal=modalBox();modal.addPanel(ElementHelper.create("p",{"textContent":"Warning: Turning iCE Colors off can be a destructive operation if you have already drawn on the canvas, or have a custom brush with iCE colors turned on."}));modal.addButton("default",{"textContent":"Turn iCE Colors Off","href":"#","onclick":function(evt){evt.preventDefault();changeMode(false);dismiss();toolbar.updateStatus("icecolors");}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();}
return false;}
function toString(){return"iCE Colors "+(noblink?"On":"Off");}
function isEnabled(){return noblink;}
function onload(){if(editor.getBlinkStatus()!==noblink){noblink=!noblink;toolbar.updateStatus("icecolors");}}
return{"init":init,"toString":toString,"isEnabled":isEnabled,"onload":onload,"uid":"icecolors"};}
AnsiEditController.addTool(iceColorsTool,"tools-left");function resizeCanvasTool(editor,toolbar){"use strict";function init(){var modal,paragraph,divContainers,widthLabel,widthInput,heightLabel,heightInput;function dismiss(){toolbar.modalEnd("resize-canvas");modal.remove();toolbar.startListening();}
function validate(){var width,height;width=parseInt(widthInput.value,10);height=parseInt(heightInput.value,10);if(width>=parseInt(widthInput.min,10)&&width<=parseInt(widthInput.max,10)&&height>=parseInt(heightInput.min,10)&&height<=parseInt(heightInput.max,10)){dismiss();if(width!==editor.getColumns()||height!==editor.getRows()){editor.resize(width,height);}}}
function keypress(evt){var keyCode=evt.keyCode||evt.which;if(keyCode===13){validate();}else if((keyCode<48||keyCode>57)&&keyCode!==9&&keyCode!==8){evt.preventDefault();}}
modal=modalBox();divContainers=[ElementHelper.create("div",{"className":"input-container resize"}),ElementHelper.create("div",{"className":"input-container resize"})];paragraph=ElementHelper.create("p",{"textContent":"The canvas can be resized to a maximum width of 320 characters, and a height of 1000 characters."});widthLabel=ElementHelper.create("label",{"for":"canvas-width","textContent":"Width: "});widthInput=ElementHelper.create("input",{"id":"canvas-width","type":"number","min":"1","max":"320","value":editor.getColumns()});heightLabel=ElementHelper.create("label",{"for":"canvas-height","textContent":"Height: "});heightInput=ElementHelper.create("input",{"id":"canvas-height","type":"number","min":"1","max":"1000","value":editor.getRows()});widthInput.addEventListener("keypress",keypress,false);heightInput.addEventListener("keypress",keypress,false);divContainers[0].appendChild(widthLabel);divContainers[0].appendChild(widthInput);divContainers[1].appendChild(heightLabel);divContainers[1].appendChild(heightInput);modal.addPanel(paragraph);modal.addPanel(divContainers[0]);modal.addPanel(divContainers[1]);modal.addButton("default",{"textContent":"Resize","href":"#","onclick":function(evt){evt.preventDefault();validate();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Resize Canvas";}
return{"init":init,"toString":toString,"uid":"resize-canvas","isModal":true};}
AnsiEditController.addTool(resizeCanvasTool,"tools-left");function loadTool(editor,toolbar){"use strict";function removeExtension(text){var index;index=text.lastIndexOf(".");return(index>=0)?text.substring(0,index):text;}
function init(){var modal,divFileZone,paragraph,fileInputContainer,fileInput;divFileZone=ElementHelper.create("div",{"className":"file-zone"});paragraph=ElementHelper.create("p",{"textContent":"Drag and drop an AnsiEdit, ANSi, XBin, or Bin file here, or select a file by clicking on the Browse button."});fileInputContainer=ElementHelper.create("div",{"className":"file-input-container"});fileInput=ElementHelper.create("input",{"type":"file"});function dismiss(){toolbar.modalEnd("load");modal.remove();toolbar.startListening();}
function loadFile(file){toolbar.setTitleText(removeExtension(file.name));Loaders.loadFile(file,function(imageData){if(file.name.split(".").pop().toLowerCase()!=="ansiedit"){if(imageData.font===undefined){editor.fireCustomEvent("change-font","CP437 8x16");}else{editor.fireCustomEvent("change-font","custom_xbin");}}
editor.setImage(imageData,imageData.noblink);},true,editor,toolbar);dismiss();}
divFileZone.addEventListener("dragover",function(evt){evt.stopPropagation();evt.preventDefault();evt.dataTransfer.dropEffect="copy";},false);divFileZone.addEventListener("drop",function(evt){evt.stopPropagation();evt.preventDefault();if(evt.dataTransfer.files.length>0){loadFile(evt.dataTransfer.files[0]);}},false);fileInput.addEventListener("change",function(evt){if(evt.target.files.length>0){loadFile(evt.target.files[0]);}},false);modal=modalBox();divFileZone.appendChild(paragraph);modal.addPanel(divFileZone);fileInputContainer.appendChild(fileInput);modal.addPanel(fileInputContainer);modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Load";}
return{"init":init,"toString":toString,"uid":"load","isModal":true};}
AnsiEditController.addTool(loadTool,"tools-left");function saveTool(editor,toolbar){"use strict";var UNCOMPRESSED,COMPRESS_LZ77,UNDO_RESIZE;UNCOMPRESSED=0;COMPRESS_LZ77=1;UNDO_RESIZE=2;function put32BitNumber(value,array,index){array[index]=value&0xff;array[index+1]=(value>>8)&0xff;array[index+2]=(value>>16)&0xff;array[index+3]=value>>24;}
function put16BitNumber(value,array,index){array[index]=value&0xff;array[index+1]=(value>>8)&0xff;}
function putNullTerminatedString(text,array,index){var i;for(i=0;i<text.length;i+=1){array[index+i]=text.charCodeAt(i);}
array[index+i]=0;}
function createBlock(header,length){return{"header":header,"bytes":new Uint8Array(length)};}
function encodeBlock(block,compression){var compressedBytes,bytes,i;if(compression===1){compressedBytes=LZ77.compress(block.bytes,5);if(compressedBytes===undefined){compression=0;}else{block.bytes=compressedBytes;}}
bytes=new Uint8Array(9+block.bytes.length);for(i=0;i<4;i+=1){bytes[i]=block.header.charCodeAt(i);}
put32BitNumber(block.bytes.length,bytes,5);bytes[4]=compression;bytes.set(block.bytes,9);return bytes;}
function createMetadata(sauce){var block;block=createBlock("META",sauce.title.length+sauce.author.length+sauce.group.length+3);putNullTerminatedString(sauce.title,block.bytes,0);putNullTerminatedString(sauce.author,block.bytes,sauce.title.length+1);putNullTerminatedString(sauce.group,block.bytes,sauce.title.length+1+sauce.author.length+1);return encodeBlock(block,UNCOMPRESSED);}
function compressImage(bytes){var compressedImage,i,j;compressedImage=new Uint8Array(bytes.length/3*2);for(i=0,j=0;i<bytes.length;i+=3,j+=2){compressedImage[j]=bytes[i];compressedImage[j+1]=bytes[i+1]+(bytes[i+2]<<4);}
return compressedImage;}
function createUndos(undos,types){var block,i,j,k,type,value;i=0;for(j=0;j<undos.length;j+=1){if(types[j]===UNDO_RESIZE){i+=undos[j][2].length/3*2+4;}else{i+=undos[j].length*6;}
i+=5;}
block=createBlock("UNDO",i);i=0;for(j=0;j<undos.length;j+=1){type=types[j];block.bytes[i]=type;i+=1;put32BitNumber(undos[j].length,block.bytes,i);i+=4;if(type===UNDO_RESIZE){put16BitNumber(undos[j][0],block.bytes,i);i+=2;put16BitNumber(undos[j][1],block.bytes,i);i+=2;block.bytes.set(compressImage(undos[j][2]),i);i+=undos[j][0]*undos[j][1]*2;}else{for(k=0;k<undos[j].length;k+=1){value=undos[j][k];block.bytes[i]=value[0];block.bytes[i+1]=value[1]+(value[2]<<4);put32BitNumber(value[3],block.bytes,i+2);i+=6;}}}
return encodeBlock(block,UNCOMPRESSED);}
function createImage(imageData,noblink){var block;block=createBlock("DISP",imageData.width*imageData.height*2+5);put16BitNumber(imageData.width,block.bytes,0);put16BitNumber(imageData.height,block.bytes,2);block.bytes[4]=noblink?1:0;block.bytes.set(compressImage(imageData.data),5);return encodeBlock(block,UNCOMPRESSED);}
function createPalette(palette){var block,i,j;block=createBlock("PALE",48);for(i=0,j=0;i<16;i+=1,j+=3){block.bytes[j]=palette[i][0];block.bytes[j+1]=palette[i][1];block.bytes[j+2]=palette[i][2];}
return encodeBlock(block,UNCOMPRESSED);}
function createFont(fontWidth,fontHeight,fontBytes){var block;block=createBlock("FONT",fontBytes.length+2);block.bytes[0]=fontWidth;block.bytes[1]=fontHeight;block.bytes.set(fontBytes,2);return encodeBlock(block,UNCOMPRESSED);}
function createStates(currentColor,currentTool,states){var i,j,block;i=0;Object.keys(states).forEach(function(key){i+=4;i+=key.length+1;i+=states[key].length;});block=createBlock("TOOL",i+1+currentTool.length+1);block.bytes[0]=currentColor;putNullTerminatedString(currentTool,block.bytes,1);i=1+currentTool.length+1;Object.keys(states).forEach(function(key){putNullTerminatedString(key,block.bytes,i);i+=key.length+1;put32BitNumber(states[key].length,block.bytes,i);i+=4;for(j=0;j<states[key].length;j+=1,i+=1){block.bytes[i]=states[key][j];}});return encodeBlock(block,UNCOMPRESSED);}
function concatBytes(array){var i,block;i=0;array.forEach(function(blockBytes){i+=blockBytes.length;});block=createBlock("ANSi",i);i=0;array.forEach(function(blockBytes){block.bytes.set(blockBytes,i);i+=blockBytes.length;});return encodeBlock(block,COMPRESS_LZ77);}
function init(){var modal;function dismiss(){toolbar.modalEnd("save-ansi");modal.remove();toolbar.startListening();}
modal=modalBox();modal.addPanel(ElementHelper.create("p",{"textContent":"Warning: This file format is still in the process of being finalised."}));modal.addPanel(ElementHelper.create("p",{"textContent":"It is recommended that you also save as an XBin as a backup strategy."}));modal.addButton("default",{"textContent":"Save","href":"#","onclick":function(evt){var image,font,palette,undoHistory,undos,metadata,states,bytes;evt.preventDefault();image=createImage(editor.getImageData(0,0,editor.getColumns(),editor.getRows()),editor.getBlinkStatus());font=createFont(editor.codepage.getFontWidth(),editor.codepage.getFontHeight(),editor.codepage.getFontBytes());palette=createPalette(editor.codepage.getPalette());metadata=createMetadata(editor.getMetadata());undoHistory=editor.getUndoHistory();undos=createUndos(undoHistory.queue,undoHistory.types);states=createStates(editor.getCurrentColor(),toolbar.getCurrentTool(),toolbar.getStates());bytes=concatBytes([image,font,palette,metadata,undos,states]);Savers.saveFile(bytes,"image/ansiedit",toolbar.getTitleText()+".ansiedit");dismiss();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Save";}
return{"init":init,"toString":toString,"uid":"save"};}
AnsiEditController.addTool(saveTool,"tools-left");function saveAsXbinTool(editor,toolbar){"use strict";function init(){var metadata;metadata=editor.getMetadata();Savers.saveXBinData(editor.getImageData(0,0,editor.getColumns(),editor.getRows()),editor.getBlinkStatus(),editor.codepage.getFontHeight(),editor.codepage.getFontBytes(),editor.codepage.getPalette(),metadata.title,metadata.author,metadata.group,toolbar.getTitleText()+".xb");return false;}
function toString(){return"Save as XBin";}
return{"init":init,"toString":toString,"uid":"save-xbin"};}
AnsiEditController.addTool(saveAsXbinTool,"tools-left");function saveAsAnsiTool(editor,toolbar){"use strict";function imageDataToAnsi(imageData){var inputIndex,end,charCode,fg,bg,bold,blink,currentFg,currentBg,currentBold,currentBlink,attribs,attribIndex,output;function ansiColor(binColor){switch(binColor){case 1:return 4;case 3:return 6;case 4:return 1;case 6:return 3;default:return binColor;}}
output=[27,91,48,109];for(inputIndex=0,end=imageData.height*imageData.width*3,currentFg=7,currentBg=0,currentBold=false,currentBlink=false;inputIndex<end;inputIndex+=3){attribs=[];charCode=imageData.data[inputIndex];switch(charCode){case 10:charCode=9;break;case 13:charCode=14;break;case 26:charCode=16;break;case 27:charCode=17;break;default:}
fg=imageData.data[inputIndex+1];bg=imageData.data[inputIndex+2];if(fg>7){bold=true;fg=fg-8;}else{bold=false;}
if(bg>7){blink=true;bg=bg-8;}else{blink=false;}
if((currentBold&&!bold)||(currentBlink&&!blink)){attribs.push([48]);currentFg=7;currentBg=0;currentBold=false;currentBlink=false;}
if(bold&&!currentBold){attribs.push([49]);currentBold=true;}
if(blink&&!currentBlink){attribs.push([53]);currentBlink=true;}
if(fg!==currentFg){attribs.push([51,48+ansiColor(fg)]);currentFg=fg;}
if(bg!==currentBg){attribs.push([52,48+ansiColor(bg)]);currentBg=bg;}
if(attribs.length){output.push(27,91);for(attribIndex=0;attribIndex<attribs.length;attribIndex+=1){output=output.concat(attribs[attribIndex]);if(attribIndex!==attribs.length-1){output.push(59);}else{output.push(109);}}}
output.push(charCode);}
return new Uint8Array(output);}
function saveAnsiData(imageData,noblink,title,author,group,filename){var ansi,sauce,combined;ansi=imageDataToAnsi(imageData,noblink);sauce=Savers.createSauce(Savers.DATATYPE_CHARACTER,Savers.FILETYPE_ANSI,ansi.length,imageData.width,imageData.height,title,author,group,(noblink?1:0)+2+16,"IBM VGA");combined=new Uint8Array(ansi.length+sauce.length);combined.set(ansi,0);combined.set(sauce,ansi.length);Savers.saveFile(combined,"image/ansi",filename);}
function init(){var modal;function dismiss(){toolbar.modalEnd("save-ansi");modal.remove();toolbar.startListening();}
modal=modalBox();modal.addPanel(ElementHelper.create("p",{"textContent":"Warning: Certain characters cannot be reliably displayed in an ANSi file. These are new-line, carriage return, end-of-file, and escape characters."}));modal.addPanel(ElementHelper.create("p",{"textContent":"If you continue this operation, these characters will be saved as horiztonal tab, shift out, data link escape, and device control 1, respectively. These substitute characters appear similar to their replacements."}));modal.addPanel(ElementHelper.create("p",{"textContent":"Also, custom colors and fonts will be ignored."}));modal.addButton("default",{"textContent":"Save as ANSi","href":"#","onclick":function(evt){var metadata;evt.preventDefault();metadata=editor.getMetadata();saveAnsiData(editor.getImageData(0,0,editor.getColumns(),editor.getRows()),editor.getBlinkStatus(),metadata.title,metadata.author,metadata.group,toolbar.getTitleText()+".ans");dismiss();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Save as ANSi";}
return{"init":init,"toString":toString,"isModal":true,"uid":"save-ansi"};}
AnsiEditController.addTool(saveAsAnsiTool,"tools-left");function editSauceTool(editor,toolbar){"use strict";function init(){var metadata,modal,divContainers,paragraph,titleLabel,titleInput,authorLabel,authorInput,groupLabel,groupInput;function dismiss(){toolbar.modalEnd("edit-sauce");modal.remove();toolbar.startListening();}
function update(){editor.setMetadata(titleInput.value,authorInput.value,groupInput.value);dismiss();}
function keypress(evt){if((evt.keyCode||evt.which)===13){evt.preventDefault();update();}}
metadata=editor.getMetadata();modal=modalBox();divContainers=[ElementHelper.create("div",{"className":"input-container sauce"}),ElementHelper.create("div",{"className":"input-container sauce"}),ElementHelper.create("div",{"className":"input-container sauce"})];paragraph=ElementHelper.create("p",{"textContent":"Additional information, such as the size of the canvas and iCE Color mode, will automatically be added to the file."});titleLabel=ElementHelper.create("label",{"for":"sauce-title","textContent":"Title: "});titleInput=ElementHelper.create("input",{"className":"long","id":"sauce-title","type":"text","maxLength":"30","value":metadata.title});authorLabel=ElementHelper.create("label",{"for":"sauce-author","textContent":"Author: "});authorInput=ElementHelper.create("input",{"id":"sauce-author","type":"text","maxLength":"20","value":metadata.author});groupLabel=ElementHelper.create("label",{"for":"sauce-group","textContent":"Group: "});groupInput=ElementHelper.create("input",{"id":"sauce-group","type":"text","maxLength":"20","value":metadata.group});titleInput.addEventListener("keypress",keypress,false);authorInput.addEventListener("keypress",keypress,false);groupInput.addEventListener("keypress",keypress,false);divContainers[0].appendChild(titleLabel);divContainers[0].appendChild(titleInput);divContainers[1].appendChild(authorLabel);divContainers[1].appendChild(authorInput);divContainers[2].appendChild(groupLabel);divContainers[2].appendChild(groupInput);modal.addPanel(paragraph);modal.addPanel(divContainers[0]);modal.addPanel(divContainers[1]);modal.addPanel(divContainers[2]);modal.addButton("default",{"textContent":"Update","href":"#","onclick":function(evt){evt.preventDefault();update();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Edit SAUCE Metadata";}
return{"init":init,"toString":toString,"uid":"edit-sauce","isModal":true};}
AnsiEditController.addTool(editSauceTool,"tools-left");function clearTool(editor,toolbar){"use strict";function init(){var modal;function dismiss(){toolbar.modalEnd("clear");modal.remove();toolbar.startListening();}
modal=modalBox();modal.addPanel(ElementHelper.create("p",{"textContent":"Warning: Your undo and redo buffer will also be destroyed."}));modal.addButton("default",{"textContent":"Clear","href":"#","onclick":function(evt){evt.preventDefault();editor.clearImage();editor.clearUndoHistory();toolbar.clearTitleText();dismiss();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Clear";}
return{"init":init,"toString":toString,"uid":"clear","isModal":true};}
AnsiEditController.addTool(clearTool,"tools-left");function loadBrush(editor,toolbar){"use strict";function init(){var modal,divFileZone,paragraph,fileInputContainer,fileInput;divFileZone=ElementHelper.create("div",{"className":"file-zone"});paragraph=ElementHelper.create("p",{"textContent":"Drag and drop an AnsiEdit, ANSi, XBin, or Bin file here, or select a file by clicking on the Browse button."});fileInputContainer=ElementHelper.create("div",{"className":"file-input-container"});fileInput=ElementHelper.create("input",{"type":"file"});function dismiss(){toolbar.modalEnd("load-brush");modal.remove();toolbar.startListening();}
function loadFile(file){Loaders.loadFile(file,function(imageData){editor.fireCustomEvent("custom-brush",{"operation":"load","imageData":imageData});},editor.getBlinkStatus());dismiss();}
divFileZone.addEventListener("dragover",function(evt){evt.stopPropagation();evt.preventDefault();evt.dataTransfer.dropEffect="copy";},false);divFileZone.addEventListener("drop",function(evt){evt.stopPropagation();evt.preventDefault();if(evt.dataTransfer.files.length){loadFile(evt.dataTransfer.files[0]);}},false);fileInput.addEventListener("change",function(evt){if(evt.target.files.length>0){loadFile(evt.target.files[0]);}},false);modal=modalBox();divFileZone.appendChild(paragraph);modal.addPanel(divFileZone);fileInputContainer.appendChild(fileInput);modal.addPanel(fileInputContainer);modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Load Brush";}
return{"init":init,"toString":toString,"uid":"load-brush","isModal":true};}
AnsiEditController.addTool(loadBrush,"tools-left");function saveBrush(editor,toolbar){"use strict";var stampImageData;editor.addCustomEventListener("custom-brush",function(evt){switch(evt.operation){case"load":stampImageData=evt.imageData;break;case"changed":stampImageData=evt.imageData;break;default:}});function init(){if(stampImageData){Savers.saveXBinData(stampImageData,editor.getBlinkStatus(),editor.codepage.getFontHeight(),editor.codepage.getFontBytes(),editor.codepage.getPalette(),"","","",toolbar.getTitleText()+"-stamp.xb");}
return false;}
function toString(){return"Save Brush";}
return{"init":init,"toString":toString,"uid":"save-brush"};}
AnsiEditController.addTool(saveBrush,"tools-left");function loadFontTool(editor,toolbar){"use strict";function init(){var modal,divFileZone,paragraphs,fileInputContainer,fileInput;divFileZone=ElementHelper.create("div",{"className":"file-zone"});paragraphs=[ElementHelper.create("p",{"textContent":"Drag and drop an image file here."}),ElementHelper.create("p",{"textContent":"The font must be drawn as white text on a black background and aligned to a 16x16 grid with no additional spacing. Each glyph must be 8 pixels wide, and no more than 32 pixels high. Any transparency (alpha channel) information will be ignored."})];fileInputContainer=ElementHelper.create("div",{"className":"file-input-container"});fileInput=ElementHelper.create("input",{"type":"file"});function dismiss(){toolbar.modalEnd("load-font");modal.remove();toolbar.startListening();}
function loadFont(file){var reader;reader=new FileReader();reader.onload=function(data){Loaders.loadFont(data.target.result,function(font){if(font!==undefined){editor.fireCustomEvent("change-font","custom_image");editor.setFont(font.width,font.height,font.bytes);dismiss();}});};reader.readAsDataURL(file);}
divFileZone.addEventListener("dragover",function(evt){evt.stopPropagation();evt.preventDefault();evt.dataTransfer.dropEffect="copy";},false);divFileZone.addEventListener("drop",function(evt){evt.stopPropagation();evt.preventDefault();if(evt.dataTransfer.files.length>0){loadFont(evt.dataTransfer.files[0]);}},false);fileInput.addEventListener("change",function(evt){if(evt.target.files.length>0){loadFont(evt.target.files[0]);}},false);modal=modalBox();divFileZone.appendChild(paragraphs[0]);divFileZone.appendChild(paragraphs[1]);modal.addPanel(divFileZone);fileInputContainer.appendChild(fileInput);modal.addPanel(fileInputContainer);modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Load Font";}
return{"init":init,"toString":toString,"uid":"load-font","isModal":true};}
AnsiEditController.addTool(loadFontTool,"tools-left");function saveFont(editor,toolbar){"use strict";var RGBA_BLACK,RGBA_WHITE;RGBA_BLACK=new Uint8Array([0,0,0,255]);RGBA_WHITE=new Uint8Array([171,171,171,255]);function generateCodepage(){var fontWidth,fontHeight,canvas,ctx,imageData,x,y,charCode;fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();canvas=ElementHelper.create("canvas",{"width":fontWidth*16,"height":fontHeight*16});ctx=canvas.getContext("2d");imageData=ctx.createImageData(fontWidth,fontHeight);for(charCode=0,y=0;y<16;y+=1){for(x=0;x<16;x+=1,charCode+=1){imageData.data.set(editor.codepage.fontDataRGBA(charCode,RGBA_WHITE,RGBA_BLACK),0);ctx.putImageData(imageData,x*fontWidth,y*fontHeight);}}
return canvas;}
function init(){Savers.saveCanvas(generateCodepage(),toolbar.getTitleText()+"-font.png");return false;}
function toString(){return"Save Font";}
return{"init":init,"toString":toString,"uid":"save-font"};}
AnsiEditController.addTool(saveFont,"tools-left");function changeFontTool(editor,toolbar){"use strict";var currrentFontName,fontGroups,fontOptions;currrentFontName="CP437 8x16";fontGroups=[{"name":"acorn","label":"Acorn Computers"},{"name":"amiga","label":"Commodore Amiga"},{"name":"atari","label":"Atari"},{"name":"becta","label":"\u0412\u0435\u0441\u0442\u0430"},{"name":"canon","label":"Canon"},{"name":"c16","label":"Commodore 16"},{"name":"c64","label":"Commodore 64"},{"name":"c65","label":"Commodore 65"},{"name":"c128","label":"Commodore 128"},{"name":"galaksija","label":"Galaksija"},{"name":"hitachi","label":"Hitachi"},{"name":"ibmpc_arabic","label":"IBM PC, Arabic"},{"name":"ibmpc_baltic_rim","label":"IBM PC, Baltic Rim"},{"name":"ibmpc_central_european","label":"IBM PC, Central European"},{"name":"ibmpc_cyrillic","label":"IBM PC, Cyrillic"},{"name":"ibmpc_french_canadian","label":"IBM PC, French Canadian"},{"name":"ibmpc_greek","label":"IBM PC, Greek"},{"name":"ibmpc_hebrew","label":"IBM PC, Hebrew"},{"name":"ibmpc_icelandic","label":"IBM PC, Icelandic"},{"name":"ibmpc_multilingual","label":"IBM PC, Multilingual"},{"name":"ibmpc_nordic","label":"IBM PC, Nordic"},{"name":"ibmpc_original","label":"IBM PC, Original"},{"name":"ibmpc_portuguese","label":"IBM PC, Portuguese"},{"name":"ibmpc_slavic","label":"IBM PC, Slavic"},{"name":"ibmpc_turkish","label":"IBM PC, Turkish"},{"name":"ibmpc_western_european","label":"IBM PC, Western European"},{"name":"aquarius","label":"Mattel Aquarius"},{"name":"msx","label":"Microsoft MSX"},{"name":"orao","label":"Orao"},{"name":"pet","label":"Commodore PET"},{"name":"phillips","label":"Phillips"},{"name":"robotron","label":"Robotron"},{"name":"sam","label":"Miles Gordon Technology Sam Coupé"},{"name":"sgi","label":"Silicon Graphics"},{"name":"sharp","label":"Sharp"},{"name":"vic20","label":"Commodore VIC-20"},{"name":"xerox","label":"Xerox"},{"name":"zx","label":"Sinclair ZX Spectrum & Clones"}];fontOptions=[{"value":"Acorn Electron 8x8","textContent":"Acorn Electron (8x8)","fontGroup":"acorn"},{"value":"BBC Model B 8x8","textContent":"BBC Microcomputer Model B (8x8)","fontGroup":"acorn"},{"value":"BBC Model B Plus 8x8","textContent":"BBC Microcomputer Model B+ (8x8)","fontGroup":"acorn"},{"value":"BBC Model B 128 8x8","textContent":"BBC Microcomputer Model B+128 (8x8)","fontGroup":"acorn"},{"value":"b-strict 8x16","textContent":"B-Strict (8x16)","fontGroup":"amiga"},{"value":"b-struct 8x16","textContent":"B-Struct (8x16)","fontGroup":"amiga"},{"value":"MicroKnight 8x16","textContent":"MicroKnight (8x16)","fontGroup":"amiga"},{"value":"MicroKnight+ 8x16","textContent":"MicroKnight, modified (8x16)","fontGroup":"amiga"},{"value":"mO'sOul 8x16","textContent":"mO'sOul (8x16)","fontGroup":"amiga"},{"value":"P0t-NOoDLE 8x16","textContent":"P0t-NOoDLE (8x16)","fontGroup":"amiga"},{"value":"SystemX Amiga Emulation 8x16","textContent":"SystemX Amiga Emulation (8x16)","fontGroup":"amiga"},{"value":"Topaz 500 8x16","textContent":"Amiga Topaz Kickstart 1.x (8x16)","fontGroup":"amiga"},{"value":"Topaz+ 500 8x16","textContent":"Amiga Topaz+ Kickstart 1.x (8x16)","fontGroup":"amiga"},{"value":"Topaz 1200 8x16","textContent":"Amiga Topaz Kickstart 2.x (8x16)","fontGroup":"amiga"},{"value":"Topaz+ 1200 8x16","textContent":"Amiga Topaz+ Kickstart 2.x (8x16)","fontGroup":"amiga"},{"value":"Atari 400 & 800 8x8","textContent":"Atari 400 & Atari 800 (8x8)","fontGroup":"atari"},{"value":"Atari 5200 8x8","textContent":"Atari 5200 SuperSystem (8x8)","fontGroup":"atari"},{"value":"Atari ASCII International 8x16","textContent":"Atari ASCII, International (8x16)","fontGroup":"atari"},{"value":"Atari ASCII Arabic 8x16","textContent":"Atari ASCII, Arabic (8x16)","fontGroup":"atari"},{"value":"Atari ASCII Graphics 8x16","textContent":"Atari ASCII, Graphics (8x16)","fontGroup":"atari"},{"value":"Atari XE 8x8","textContent":"Atari XE Video Game System (8x8)","fontGroup":"atari"},{"value":"PK8000 Vesta 8x8","textContent":"\u0412\u0435\u0441\u0442\u0430 \u041F\u041A8000; Vesta PK8000 (8x8)","fontGroup":"becta"},{"value":"Canon X07 8x8","textContent":"Canon X-07 (8x16)","fontGroup":"canon"},{"value":"C16 International 8x8","textContent":"Commodore 16, International (8x8)","fontGroup":"c16"},{"value":"C16 Hungarian 8x8","textContent":"Commodore 16, Hungarian (8x8)","fontGroup":"c16"},{"value":"C64 International Lower 8x8","textContent":"Commodore 64, International Lower (8x8)","fontGroup":"c64"},{"value":"C64 International Upper 8x8","textContent":"Commodore 64, International Upper (8x8)","fontGroup":"c64"},{"value":"C64 German Lower 8x8","textContent":"Commodore 64, German Lower (8x8)","fontGroup":"c64"},{"value":"C64 German Upper 8x8","textContent":"Commodore 64, German Upper (8x8)","fontGroup":"c64"},{"value":"C64 Hungarian Lower 8x8","textContent":"Commodore 64, Hungarian Lower (8x8)","fontGroup":"c64"},{"value":"C64 Hungarian Upper 8x8","textContent":"Commodore 64, Hungarian Upper (8x8)","fontGroup":"c64"},{"value":"C64 Swedish 1 Lower 8x8","textContent":"Commodore 64, Swedish 1 Lower (8x8)","fontGroup":"c64"},{"value":"C64 Swedish 1 Upper 8x8","textContent":"Commodore 64, Swedish 1 Upper (8x8)","fontGroup":"c64"},{"value":"C64 Swedish 2 Lower 8x8","textContent":"Commodore 64, Swedish 2 Lower (8x8)","fontGroup":"c64"},{"value":"C64 Swedish 2 Upper 8x8","textContent":"Commodore 64, Swedish 2 Upper (8x8)","fontGroup":"c64"},{"value":"C65 Lower 1 8x8","textContent":"Commodore 65, Lower 1 (8x8)","fontGroup":"c65"},{"value":"C65 Lower 2 8x8","textContent":"Commodore 65, Lower 2 (8x8)","fontGroup":"c65"},{"value":"C65 Upper 8x8","textContent":"Commodore 65, Upper (8x8)","fontGroup":"c65"},{"value":"C128 Lower 1 8x8","textContent":"Commodore 128, Lower 1 (8x8)","fontGroup":"c128"},{"value":"C128 Lower 2 8x8","textContent":"Commodore 128, Lower 2 (8x8)","fontGroup":"c128"},{"value":"C128 Upper 8x8","textContent":"Commodore 128, Upper (8x8)","fontGroup":"c128"},{"value":"Galaksija 8x13","textContent":"Galaksija; Galaxy (8x13)","fontGroup":"galaksija"},{"value":"Hitachi MB-6880 8x8","textContent":"Hitachi MB 6880 (8x8)","fontGroup":"hitachi"},{"value":"CP864 8x8","textContent":"IBM PC Code page 864 (8x8)","fontGroup":"ibmpc_arabic"},{"value":"CP864 8x14","textContent":"IBM PC Code page 864 (8x14)","fontGroup":"ibmpc_arabic"},{"value":"CP864 8x16","textContent":"IBM PC Code page 864 (8x16)","fontGroup":"ibmpc_arabic"},{"value":"CP775 8x8","textContent":"IBM PC Code page 775 (8x8)","fontGroup":"ibmpc_baltic_rim"},{"value":"CP775 8x14","textContent":"IBM PC Code page 775 (8x14)","fontGroup":"ibmpc_baltic_rim"},{"value":"CP775 8x16","textContent":"IBM PC Code page 775 (8x16)","fontGroup":"ibmpc_baltic_rim"},{"value":"CP852 8x8","textContent":"IBM PC Code page 852 (8x8)","fontGroup":"ibmpc_central_european"},{"value":"CP852 8x14","textContent":"IBM PC Code page 852 (8x14)","fontGroup":"ibmpc_central_european"},{"value":"CP852 8x16","textContent":"IBM PC Code page 852 (8x16)","fontGroup":"ibmpc_central_european"},{"value":"CP852 8x19","textContent":"IBM PC Code page 852 (8x19)","fontGroup":"ibmpc_central_european"},{"value":"CP855 8x8","textContent":"IBM PC Code page 855 (8x8)","fontGroup":"ibmpc_cyrillic"},{"value":"CP855 8x14","textContent":"IBM PC Code page 855 (8x14)","fontGroup":"ibmpc_cyrillic"},{"value":"CP855 8x16","textContent":"IBM PC Code page 855 (8x16)","fontGroup":"ibmpc_cyrillic"},{"value":"CP866 8x8","textContent":"IBM PC Code page 866 (8x8)","fontGroup":"ibmpc_cyrillic"},{"value":"CP866 8x14","textContent":"IBM PC Code page 866 (8x14)","fontGroup":"ibmpc_cyrillic"},{"value":"CP866 8x16","textContent":"IBM PC Code page 866 (8x16)","fontGroup":"ibmpc_cyrillic"},{"value":"CP863 8x8","textContent":"IBM PC Code page 863 (8x8)","fontGroup":"ibmpc_french_canadian"},{"value":"CP863 8x14","textContent":"IBM PC Code page 863 (8x14)","fontGroup":"ibmpc_french_canadian"},{"value":"CP863 8x16","textContent":"IBM PC Code page 863 (8x16)","fontGroup":"ibmpc_french_canadian"},{"value":"CP863 8x19","textContent":"IBM PC Code page 863 (8x19)","fontGroup":"ibmpc_french_canadian"},{"value":"CP737 8x8","textContent":"IBM PC Code page 737 (8x8)","fontGroup":"ibmpc_greek"},{"value":"CP737 8x14","textContent":"IBM PC Code page 737 (8x14)","fontGroup":"ibmpc_greek"},{"value":"CP737 8x16","textContent":"IBM PC Code page 737 (8x16)","fontGroup":"ibmpc_greek"},{"value":"CP851 8x8","textContent":"IBM PC Code page 851 (8x8)","fontGroup":"ibmpc_greek"},{"value":"CP851 8x14","textContent":"IBM PC Code page 851 (8x14)","fontGroup":"ibmpc_greek"},{"value":"CP851 8x16","textContent":"IBM PC Code page 851 (8x16)","fontGroup":"ibmpc_greek"},{"value":"CP851 8x19","textContent":"IBM PC Code page 851 (8x19)","fontGroup":"ibmpc_greek"},{"value":"CP869 8x8","textContent":"IBM PC Code page 869 (8x8)","fontGroup":"ibmpc_greek"},{"value":"CP869 8x14","textContent":"IBM PC Code page 869 (8x14)","fontGroup":"ibmpc_greek"},{"value":"CP869 8x16","textContent":"IBM PC Code page 869 (8x16)","fontGroup":"ibmpc_greek"},{"value":"CP862 8x8","textContent":"IBM PC Code page 862 (8x8)","fontGroup":"ibmpc_hebrew"},{"value":"CP862 8x14","textContent":"IBM PC Code page 862 (8x14)","fontGroup":"ibmpc_hebrew"},{"value":"CP862 8x16","textContent":"IBM PC Code page 862 (8x16)","fontGroup":"ibmpc_hebrew"},{"value":"CP861 8x8","textContent":"IBM PC Code page 861 (8x8)","fontGroup":"ibmpc_icelandic"},{"value":"CP861 8x14","textContent":"IBM PC Code page 861 (8x14)","fontGroup":"ibmpc_icelandic"},{"value":"CP861 8x16","textContent":"IBM PC Code page 861 (8x16)","fontGroup":"ibmpc_icelandic"},{"value":"CP861 8x19","textContent":"IBM PC Code page 861 (8x19)","fontGroup":"ibmpc_icelandic"},{"value":"CP853 8x8","textContent":"IBM PC Code page 853 (8x8)","fontGroup":"ibmpc_multilingual"},{"value":"CP853 8x14","textContent":"IBM PC Code page 853 (8x14)","fontGroup":"ibmpc_multilingual"},{"value":"CP853 8x16","textContent":"IBM PC Code page 853 (8x16)","fontGroup":"ibmpc_multilingual"},{"value":"CP853 8x19","textContent":"IBM PC Code page 853 (8x19)","fontGroup":"ibmpc_multilingual"},{"value":"CP865 8x8","textContent":"IBM PC Code page 865 (8x8)","fontGroup":"ibmpc_nordic"},{"value":"CP865 8x14","textContent":"IBM PC Code page 865 (8x14)","fontGroup":"ibmpc_nordic"},{"value":"CP865 8x16","textContent":"IBM PC Code page 865 (8x16)","fontGroup":"ibmpc_nordic"},{"value":"CP865 8x19","textContent":"IBM PC Code page 865 (8x19)","fontGroup":"ibmpc_nordic"},{"value":"CP437 8x8","textContent":"IBM PC Code page 437 (8x8)","fontGroup":"ibmpc_original"},{"value":"CP437 8x14","textContent":"IBM PC Code page 437 (8x14)","fontGroup":"ibmpc_original"},{"value":"CP437 8x16","textContent":"IBM PC Code page 437 (8x16) - Default","fontGroup":"ibmpc_original"},{"value":"CP437 8x19","textContent":"IBM PC Code page 437 (8x19)","fontGroup":"ibmpc_original"},{"value":"CP860 8x8","textContent":"IBM PC Code page 860 (8x8)","fontGroup":"ibmpc_portuguese"},{"value":"CP860 8x14","textContent":"IBM PC Code page 860 (8x14)","fontGroup":"ibmpc_portuguese"},{"value":"CP860 8x16","textContent":"IBM PC Code page 860 (8x16)","fontGroup":"ibmpc_portuguese"},{"value":"CP860 8x19","textContent":"IBM PC Code page 860 (8x19)","fontGroup":"ibmpc_portuguese"},{"value":"CP1251 8x8","textContent":"IBM PC Code page 1251 (8x8)","fontGroup":"ibmpc_slavic"},{"value":"CP1251 8x14","textContent":"IBM PC Code page 1251 (8x14)","fontGroup":"ibmpc_slavic"},{"value":"CP1251 8x16","textContent":"IBM PC Code page 1251 (8x16)","fontGroup":"ibmpc_slavic"},{"value":"CP857 8x8","textContent":"IBM PC Code page 857 (8x8)","fontGroup":"ibmpc_turkish"},{"value":"CP857 8x14","textContent":"IBM PC Code page 857 (8x14)","fontGroup":"ibmpc_turkish"},{"value":"CP857 8x16","textContent":"IBM PC Code page 857 (8x16)","fontGroup":"ibmpc_turkish"},{"value":"CP850 8x8","textContent":"IBM PC Code page 850 (8x8)","fontGroup":"ibmpc_western_european"},{"value":"CP850 8x14","textContent":"IBM PC Code page 850 (8x14)","fontGroup":"ibmpc_western_european"},{"value":"CP850 8x16","textContent":"IBM PC Code page 850 (8x16)","fontGroup":"ibmpc_western_european"},{"value":"CP850 8x19","textContent":"IBM PC Code page 850 (8x19)","fontGroup":"ibmpc_western_european"},{"value":"Aquarius 8x8","textContent":"Aquarius Home Computer (8x8)","fontGroup":"aquarius"},{"value":"MSX Brazilian 8x8","textContent":"Microsoft MSX, Brazilian (8x8)","fontGroup":"msx"},{"value":"MSX Cyrillic 8x8","textContent":"Microsoft MSX, Cyrillic (8x8)","fontGroup":"msx"},{"value":"Orao 8x8","textContent":"Orao; Eagle (8x8)","fontGroup":"orao"},{"value":"PET 1 8x8","textContent":"Commodore PET 2001 series (8x8)","fontGroup":"pet"},{"value":"PET 2 8x8","textContent":"Commodore PET 4000 series (8x8)","fontGroup":"pet"},{"value":"PET Greek 8x8","textContent":"Commodore PET 2001 series, Greek (8x8)","fontGroup":"pet"},{"value":"PET Norwegian 8x8","textContent":"Commodore PET 2001 series, Norwegian (8x8)","fontGroup":"pet"},{"value":"PET Russian 8x8","textContent":"Commodore PET 2001 series, Russian (8x8)","fontGroup":"pet"},{"value":"PET Swedish 8x8","textContent":"Commodore PET 2001 series, Swedish (8x8)","fontGroup":"pet"},{"value":"SuperPET Lower 8x8","textContent":"Commodore SuperPET 9000 series, Lower (8x8)","fontGroup":"pet"},{"value":"SuperPET Upper 8x8","textContent":"Commodore SuperPET 9000 series, Upper (8x8)","fontGroup":"pet"},{"value":"SuperPET Swedish Lower 8x8","textContent":"Commodore SuperPET 9000 series, Swedish Lower (8x8)","fontGroup":"pet"},{"value":"SuperPET Swedish Upper 8x8","textContent":"Commodore SuperPET 9000 series, Swedish Upper (8x8)","fontGroup":"pet"},{"value":"Philips VG 5000 8x10","textContent":"Philips VG 5000 (8x10)","fontGroup":"phillips"},{"value":"Robotron Z 9001 8x8","textContent":"Robotron Z 9001 (8x8)","fontGroup":"robotron"},{"value":"Robotron Z 9001 International 8x8","textContent":"Robotron Z 9001, International (8x8)","fontGroup":"robotron"},{"value":"Robotron Z 9001 German 8x8","textContent":"Robotron Z 9001, German (8x8)","fontGroup":"robotron"},{"value":"SAM Coupé 8x8","textContent":"SAM Coupé (8x8)","fontGroup":"sam"},{"value":"SGI IRIS 3130 8x16","textContent":"SGI IRIS 3000 (8x16)","fontGroup":"sgi"},{"value":"SGI IRIS 4D 8x16","textContent":"SGI IRIS 4D (8x16)","fontGroup":"sgi"},{"value":"Sharp MZ-80a 8x8","textContent":"Sharp MZ-80a (8x8)","fontGroup":"sharp"},{"value":"VIC-20 International Lower 8x8","textContent":"Commodore VIC-20, International Lower (8x8)","fontGroup":"vic20"},{"value":"VIC-20 International Upper 8x8","textContent":"Commodore VIC-20, International Upper (8x8)","fontGroup":"vic20"},{"value":"VIC-20 German Lower 8x8","textContent":"Commodore VIC-20, German Lower (8x8)","fontGroup":"vic20"},{"value":"VIC-20 German Upper 8x8","textContent":"Commodore VIC-20, German Upper (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Japanese Lower 8x8","textContent":"Commodore VIC-20, Japanese Lower (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Japanese Upper 8x8","textContent":"Commodore VIC-20, Japanese Upper (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Norwegian Lower 8x8","textContent":"Commodore VIC-20, Norwegian Lower (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Norwegian Upper 8x8","textContent":"Commodore VIC-20, Norwegian Upper (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Swedish Lower 8x8","textContent":"Commodore VIC-20, Swedish Lower (8x8)","fontGroup":"vic20"},{"value":"VIC-20 Swedish Upper 8x8","textContent":"Commodore VIC-20, Swedish Upper (8x8)","fontGroup":"vic20"},{"value":"Xerox x820 8x8","textContent":"Xerox x820 (8x8)","fontGroup":"xerox"},{"value":"Xerox x820-II u57 8x8","textContent":"Xerox x820-II, update 57 (8x8)","fontGroup":"xerox"},{"value":"Xerox x820-II u58 8x8","textContent":"Xerox x820-II, update 58 (8x8)","fontGroup":"xerox"},{"value":"Pentagon 128k sos89r 8x8","textContent":"Pentagon 128k SOS89R (8x8)","fontGroup":"zx"},{"value":"Pentagon 128k Dynaelectronics 8x8","textContent":"Pentagon 128k 1989 (8x8)","fontGroup":"zx"},{"value":"Pentagon 128k 1990 8x8","textContent":"Pentagon 128k 1990 (8x8)","fontGroup":"zx"},{"value":"Pentagon 128k 1991 8x8","textContent":"Pentagon 128k 1991 (8x8)","fontGroup":"zx"},{"value":"Pentagon 128k 1993 8x8","textContent":"Pentagon 128k 1993 (8x8)","fontGroup":"zx"},{"value":"ZX ASZMIC 8x8","textContent":"ZX ASZMIC (8x8)","fontGroup":"zx"},{"value":"ZX Evolution 8x8","textContent":"Vitality ZX Evolution (8x8)","fontGroup":"zx"},{"value":"ZX Spectrum 8x8","textContent":"Sinclair ZX Spectrum (8x8)","fontGroup":"zx"},{"value":"ZX Spectrum Blitz 8x8","textContent":"Blitz's ZX Spectrum (8x8)","fontGroup":"zx"},{"value":"ZX80 8x8","textContent":"Sinclair ZX80 (8x8)","fontGroup":"zx"},{"value":"ZX81 8x8","textContent":"Sinclair ZX81 (8x8)","fontGroup":"zx"}];editor.addCustomEventListener("change-font",function(fontName){currrentFontName=fontName;});function init(){var modal,divContainer,fontSelector,groups,optGroups;function dismiss(){toolbar.modalEnd("change-font");modal.remove();toolbar.startListening();}
modal=modalBox();groups=[];optGroups={};fontGroups.forEach(function(group){groups.push(group.name);optGroups[group.name]=ElementHelper.create("optgroup",{"label":group.label});});fontOptions.forEach(function(option){var optionElement;if(optGroups[option.fontGroup]!==undefined){optionElement=ElementHelper.create("option",{"value":option.value,"textContent":option.textContent});if(currrentFontName===option.value){optionElement.selected="true";}
optGroups[option.fontGroup].appendChild(optionElement);}});fontSelector=ElementHelper.create("select");switch(currrentFontName){case"custom_image":fontSelector.appendChild(ElementHelper.create("option",{"value":"custom_image","textContent":"Custom Font (loaded from an image file)","selected":"true"}));break;case"custom_xbin":fontSelector.appendChild(ElementHelper.create("option",{"value":"custom_xbin","textContent":"Custom Font (included within an XBin file)","selected":"true"}));break;}
groups.forEach(function(group){fontSelector.appendChild(optGroups[group]);});divContainer=ElementHelper.create("div",{"className":"input-container change-font"});divContainer.appendChild(fontSelector);modal.addPanel(divContainer);modal.addButton("default",{"textContent":"Change Font","href":"#","onclick":function(evt){evt.preventDefault();if(fontSelector.value!=="custom"){Loaders.loadFont("fonts/"+fontSelector.value+".png",function(font){if(font!==undefined){currrentFontName=fontSelector.value;editor.setFont(font.width,font.height,font.bytes);dismiss();}});}}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Change Font";}
function getState(){var bytes,i;bytes=new Uint8Array(currrentFontName.length);for(i=0;i<currrentFontName.length;i+=1){bytes[i]=currrentFontName.charCodeAt(i);}
return bytes;}
function setState(bytes){var i;currrentFontName="";for(i=0;i<bytes.length;i+=1){currrentFontName+=String.fromCharCode(bytes[i]);}}
return{"init":init,"toString":toString,"uid":"change-font","isModal":true,"getState":getState,"setState":setState};}
AnsiEditController.addTool(changeFontTool,"tools-left");function loadPalette(editor,toolbar){"use strict";function init(){var modal,divFileZone,paragraphs,fileInputContainer,fileInput;divFileZone=ElementHelper.create("div",{"className":"file-zone"});paragraphs=[ElementHelper.create("p",{"textContent":"Drag and drop an image file here."}),ElementHelper.create("p",{"textContent":"The palette image must be 160 pixels wide, and 40 pixels high, consisting of 16 square blocks of color exactly 20 pixels in size for both dimensions. The higher intensity colors must be placed on the top row of the image."})];fileInputContainer=ElementHelper.create("div",{"className":"file-input-container"});fileInput=ElementHelper.create("input",{"type":"file"});function dismiss(){toolbar.modalEnd("load-palette");modal.remove();toolbar.startListening();}
function loadPalette(file){var reader;reader=new FileReader();reader.onload=function(data){Loaders.loadPalette(data.target.result,function(palette){if(palette!==undefined){editor.setPalette(palette);dismiss();}});};reader.readAsDataURL(file);}
divFileZone.addEventListener("dragover",function(evt){evt.stopPropagation();evt.preventDefault();evt.dataTransfer.dropEffect="copy";},false);divFileZone.addEventListener("drop",function(evt){evt.stopPropagation();evt.preventDefault();if(evt.dataTransfer.files.length>0){loadPalette(evt.dataTransfer.files[0]);}},false);fileInput.addEventListener("change",function(evt){if(evt.target.files.length>0){loadPalette(evt.target.files[0]);}},false);modal=modalBox();divFileZone.appendChild(paragraphs[0]);divFileZone.appendChild(paragraphs[1]);modal.addPanel(divFileZone);fileInputContainer.appendChild(fileInput);modal.addPanel(fileInputContainer);modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});toolbar.stopListening();modal.init();return false;}
function toString(){return"Load Palette";}
return{"init":init,"toString":toString,"uid":"load-palette","isModal":true};}
AnsiEditController.addTool(loadPalette,"tools-left");function savePalette(editor,toolbar){"use strict";function createPalette(){var canvas,ctx,i;canvas=ElementHelper.create("canvas",{"width":160,"height":40,"style":{"cursor":"crosshair"}});ctx=canvas.getContext("2d");for(i=0;i<16;i+=1){ctx.fillStyle=editor.getRGBAColorFor(i,1);ctx.fillRect((i%8)*canvas.width/8,(i<8)?canvas.height/2:0,canvas.width/8,canvas.height/2);}
return canvas;}
function init(){Savers.saveCanvas(createPalette(),toolbar.getTitleText()+"-palette.png");return false;}
function toString(){return"Save Palette";}
return{"init":init,"toString":toString,"uid":"save-palette"};}
AnsiEditController.addTool(savePalette,"tools-left");function changePalette(editor,toolbar){"use strict";var canvas,paletteCanvas,selectionCanvas,inputSliders,currentColor,palette,spanValues;currentColor=0;function createSelectionCanvas(){var ctx;selectionCanvas=ElementHelper.create("canvas",{"width":25,"height":25});ctx=selectionCanvas.getContext("2d");ctx.fillStyle="white";ctx.fillRect(0,0,selectionCanvas.width,1);ctx.fillRect(0,selectionCanvas.height-1,selectionCanvas.width,1);ctx.fillRect(0,0,1,selectionCanvas.height);ctx.fillRect(selectionCanvas.width-1,0,1,selectionCanvas.height);return selectionCanvas;}
function getStyleFor(color){return"rgb("+(palette[color][0]<<2|palette[color][0]>>4)+", "+(palette[color][1]<<2|palette[color][1]>>4)+", "+(palette[color][2]<<2|palette[color][2]>>4)+")";}
function updateTool(){var ctx;ctx=canvas.getContext("2d");ctx.drawImage(paletteCanvas,0,0);if(currentColor<8){ctx.drawImage(selectionCanvas,currentColor*25,75);}else{ctx.drawImage(selectionCanvas,(currentColor-8)*25,50);}}
function updateCurrentColorOnCanvas(){var ctx;ctx=paletteCanvas.getContext("2d");ctx.fillStyle=getStyleFor(currentColor);ctx.fillRect(0,0,200,50);updateTool();}
function updateSwatch(color){var ctx;ctx=paletteCanvas.getContext("2d");ctx.fillStyle=getStyleFor(color);ctx.fillRect((color%8)*paletteCanvas.width/8,(color<8)?75:50,paletteCanvas.width/8,25);}
function updateValues(){spanValues.red.textContent=inputSliders.red.value+" ("+(Math.floor(parseInt(inputSliders.red.value,10)/63*255))+")";spanValues.green.textContent=inputSliders.green.value+" ("+(Math.floor(parseInt(inputSliders.green.value,10)/63*255))+")";spanValues.blue.textContent=inputSliders.blue.value+" ("+(Math.floor(parseInt(inputSliders.blue.value,10)/63*255))+")";}
function selectColor(color){currentColor=color;inputSliders.red.value=palette[color][0];inputSliders.green.value=palette[color][1];inputSliders.blue.value=palette[color][2];updateCurrentColorOnCanvas();updateTool();updateValues();editor.setCurrentColor(color);}
function canvasSelection(evt){var pos,color;pos=evt.currentTarget.getBoundingClientRect();color=((1-Math.floor((evt.clientY-pos.top-50)/25)))*8+Math.floor((evt.clientX-pos.left)/25);if(color>=0&&color<=15){selectColor(color);}}
function createCanvas(){canvas=ElementHelper.create("canvas",{"width":200,"height":100,"style":{"cursor":"crosshair"}});canvas.style.verticalAlign="bottom";canvas.addEventListener("mousedown",canvasSelection,false);canvas.addEventListener("mousemove",function(evt){var mouseButton;mouseButton=(evt.buttons!==undefined)?evt.buttons:evt.which;if(mouseButton){canvasSelection(evt);}},false);}
function createPaletteCanvas(){var ctx,i;paletteCanvas=ElementHelper.create("canvas",{"width":200,"height":100});ctx=paletteCanvas.getContext("2d");for(i=0;i<16;i+=1){updateSwatch(i);}}
function changeCurrentColor(){palette[currentColor]=[parseInt(inputSliders.red.value,10),parseInt(inputSliders.green.value,10),parseInt(inputSliders.blue.value,10)];updateCurrentColorOnCanvas();updateSwatch(currentColor);updateValues();}
createSelectionCanvas();createCanvas();function init(){var modal,divPaletteContainer,divPaletteSliders,divSliders,labelSliders;currentColor=editor.getCurrentColor();palette=editor.getPalette().slice(0);createPaletteCanvas();divSliders={"red":ElementHelper.create("div",{"className":"slider-container"}),"green":ElementHelper.create("div",{"className":"slider-container"}),"blue":ElementHelper.create("div",{"className":"slider-container"})};labelSliders={"red":ElementHelper.create("label",{"for":"red","textContent":"Red:"}),"green":ElementHelper.create("label",{"for":"green","textContent":"Green:"}),"blue":ElementHelper.create("label",{"for":"blue","textContent":"Blue:"})};inputSliders={"red":ElementHelper.create("input",{"name":"red","type":"range","min":"0","max":"63"}),"green":ElementHelper.create("input",{"name":"green","type":"range","min":"0","max":"63"}),"blue":ElementHelper.create("input",{"name":"blue","type":"range","min":"0","max":"63"})};spanValues={"red":ElementHelper.create("label",{"className":"rgb-value"}),"green":ElementHelper.create("label",{"className":"rgb-value"}),"blue":ElementHelper.create("label",{"className":"rgb-value"})};inputSliders.red.addEventListener("input",changeCurrentColor,false);inputSliders.red.addEventListener("change",changeCurrentColor,false);inputSliders.green.addEventListener("input",changeCurrentColor,false);inputSliders.green.addEventListener("change",changeCurrentColor,false);inputSliders.blue.addEventListener("input",changeCurrentColor,false);inputSliders.blue.addEventListener("change",changeCurrentColor,false);divSliders.red.appendChild(labelSliders.red);divSliders.red.appendChild(inputSliders.red);divSliders.red.appendChild(spanValues.red);divSliders.green.appendChild(labelSliders.green);divSliders.green.appendChild(inputSliders.green);divSliders.green.appendChild(spanValues.green);divSliders.blue.appendChild(labelSliders.blue);divSliders.blue.appendChild(inputSliders.blue);divSliders.blue.appendChild(spanValues.blue);function dismiss(){toolbar.modalEnd("change-palette");modal.remove();toolbar.startListening();}
modal=modalBox();divPaletteContainer=ElementHelper.create("div",{"className":"palette-container"});divPaletteSliders=ElementHelper.create("div",{"className":"palette-sliders"});divPaletteContainer.appendChild(canvas);divPaletteSliders.appendChild(divSliders.red);divPaletteSliders.appendChild(divSliders.green);divPaletteSliders.appendChild(divSliders.blue);modal.addPanel(divPaletteContainer);modal.addPanel(divPaletteSliders);modal.addButton("default",{"textContent":"Change Palette","href":"#","onclick":function(evt){evt.preventDefault();editor.setPalette(palette);dismiss();}});modal.addButton("default",{"textContent":"Reset to Default Values","href":"#","onclick":function(evt){evt.preventDefault();editor.setPaletteToDefault();dismiss();}});modal.addButton("cancel",{"textContent":"Cancel","href":"#","onclick":function(evt){evt.preventDefault();dismiss();}});selectColor(currentColor);updateTool();toolbar.stopListening();modal.init();return false;}
function toString(){return"Change Palette";}
return{"init":init,"toString":toString,"uid":"change-palette","isModal":true};}
AnsiEditController.addTool(changePalette,"tools-left");function exportPNG(editor,toolbar){"use strict";function init(){Savers.saveCanvas(editor.renderImageData(editor.getImageData(0,0,editor.getColumns(),editor.getRows(),false)),toolbar.getTitleText()+".png");return false;}
function toString(){return"Export as PNG";}
return{"init":init,"toString":toString,"uid":"export-png"};}
AnsiEditController.addTool(exportPNG,"tools-left");function infoTool(editor){"use strict";var HUMAN_READABLE_CODES,canvas,ctx,textHeight,categoryEnd;HUMAN_READABLE_CODES=["Null","Start of Heading","Start of Text","End of Text","End of Transmission","Enquiry","Acknowledgment","Bell","Back Space","Horizontal Tab","Line Feed","Vertical Tab","Form Feed","Carriage Return","Shift Out / X-On","Shift In / X-Off","Data Line Escape","Device Control 1","Device Control 2","Device Control 3","Device Control 4","Negative Acknowledgement","Synchronous Idle","End of Transmit Block","Cancel","End of Medium","Substitute","Escape","File Separator","Group Separator","Record Separator","Unit Separator","Space","Exclamation Mark","Double Quotes","Number Sign","Dollar Sign","Percent Sign","Ampersand","Single Quote","Open Parentheses","Closed Parentheses","Asterisk","Plus Sign","Comma","Hyphen","Period","Slash","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Colon","Semicolon","Less-Than Sign","Equals Sign","Greater-Than Sign","Question Mark","At Symbol","Uppercase A","Uppercase B","Uppercase C","Uppercase D","Uppercase E","Uppercase F","Uppercase G","Uppercase H","Uppercase I","Uppercase J","Uppercase K","Uppercase L","Uppercase M","Uppercase N","Uppercase O","Uppercase P","Uppercase Q","Uppercase R","Uppercase S","Uppercase T","Uppercase U","Uppercase V","Uppercase W","Uppercase X","Uppercase Y","Uppercase Z","Open Bracket","Backslash","Closing Bracket","Caret","Underscore","Grave Accent","Lowercase a","Lowercase b","Lowercase c","Lowercase d","Lowercase e","Lowercase f","Lowercase g","Lowercase h","Lowercase i","Lowercase j","Lowercase k","Lowercase l","Lowercase m","Lowercase n","Lowercase o","Lowercase p","Lowercase q","Lowercase r","Lowercase s","Lowercase t","Lowercase u","Lowercase v","Lowercase w","Lowercase x","Lowercase y","Lowercase z","Opening Brace","Vertical Bar","Closing Brace","Tilde","Delete","C-Cedilla","u-Umlaut","e-Acute","a-Circumflex","a-Umlaut","a-grave","a-ring","c-cedilla","e-circumflex","e-umlauts","e-grave","i-umlaut","i-circumflex","i-grave","A-umlaut","A-ring","E-acute","ae","AE","o-circumflex","o-umlaut","o-grave","u-circumflex","u-grave","y-diaeresis","O-umlaut","U-umlaut","Cent Sign","Pound Sign","Yen Sign","Peseta Sign","f-Hook","a-Acute","i-Acute","o-Acute","u-Acute","n-Tilde","N-Tilde","Feminine Ordinal","Masculine Ordinal","Inverted Question Mark","Reversed Not Sign","Not Sign","One Half","One Quarter","Inverted Exclamation Mark","Angle Quotation Mark","Angle Quotation Mark","Light Shade","Medium Shade","Dark Shade","Light Vertical","Light Vertical and Left","Vertical Single and Left Double","Vertical Double and Left Single","Down Double and Left Single","Down Single and Left Double","Double Vertical and Left","Double Vertical","Double Down and Left","Double Up and Left","Up Double and Left Single","Up Single and Left Double","Light Down and Left","Light Up and Right","Light Up and Horizontal","Light Down and Horizontal","Light Vertical and Right","Light Horizontal","Light Vertical and Horizontal","Vertical Single and Right Double","Vertical Double and Right Single","Double Up and Right","Double Down and Right","Double Up and Horizontal","Double Down and Horizontal","Double Vertical and Right","Double Horizontal","Double Vertical and Horizontal","Up Single and Horizontal Double","Up Double and Horizontal Single","Down Single and Horizontal Double","Down Double and Horizontal Single","Up Double and Right Single","Up Single and Right Double","Down Single and Right Double","Down Double and Right Single","Vertical Double and Horizontal Single","Vertical Single and Horizontal Double","Light Up and Left","Light Down and Right","Full Block","Lower Half Block","Left Half Block","Right Half Block","Upper Half Block","Alpha","Sharp S","Gamma","Pi","Capital Sigma","Lowercase Sigma","Micro","Tau","Phi","Theta","Omega","Delta","Infinity","Phi","Epsilon","Intersection","Identical To","Plus-Minus","Greater-Than or Equal To","Less-Than or Equal Ti","Top Half Integral","Bottom Half Integral","Division Sign","Almost Equal To","Degree Sign","Bullet Operator","Middle Dot","Square Root","Superscript Latin Small Letter N","Superscript Two","Black Square","No-Break Space"];canvas=ElementHelper.create("canvas",{"width":160,"height":98});categoryEnd=canvas.width*0.3;ctx=canvas.getContext("2d");ctx.fillStyle="rgba(255, 255, 255, 0.25)";ctx.textBaseline="top";ctx.font="normal normal normal 11px \"Lucida Grande\", sans-serif";textHeight=14;function addCategory(text,row){var metric;metric=ctx.measureText(text);ctx.fillText(text,categoryEnd-metric.width,textHeight*row);}
function updateInfo(text,row){if(row>0){ctx.textAlign="left";ctx.clearRect(categoryEnd,textHeight*row,canvas.width-categoryEnd,textHeight);ctx.fillText(text,categoryEnd+2,textHeight*row);}else{ctx.textAlign="center";ctx.clearRect(0,textHeight*row,canvas.width,textHeight);ctx.fillText(text,canvas.width/2,0);}}
function update(block){updateInfo(HUMAN_READABLE_CODES[block.charCode],0);updateInfo(block.textX+1,1);updateInfo(block.textY+1,2);updateInfo(block.blockX,3);updateInfo(block.blockY+" ("+(block.isUpperHalf?"Upper":"Lower")+")",4);updateInfo(block.foreground,5);updateInfo(block.background,6);}
function canvasMove(coord){update(coord);}
function canvasDown(coord){update(coord);}
function canvasDrag(coord){update(coord);}
function canvasOut(){var i;for(i=0;i<9;i+=1){updateInfo("",i);}}
editor.addMouseMoveListener(canvasMove);editor.addMouseDownListener(canvasDown);editor.addMouseDragListener(canvasDrag);editor.addMouseOutListener(canvasOut);addCategory("",0);addCategory("Text X:",1);addCategory("Text Y:",2);addCategory("Block X:",3);addCategory("Block Y:",4);addCategory("Foreg:",5);addCategory("Backg:",6);function toString(){return"Information";}
return{"toString":toString,"canvas":canvas,"uid":"info"};}
AnsiEditController.addTool(infoTool,"tools-left");function previewTool(editor,toolbar){"use strict";var canvas,ctx,imageData,columns,rows,fontWidth,fontHeight,scaleFactor;function redraw(){var image,x,y,i;image=editor.getImageData(0,0,columns,rows);for(y=0,i=0;y<rows;y+=1){for(x=0;x<columns;x+=1,i+=3){imageData.data.set(editor.codepage.fontData(image.data[i],image.data[i+1],image.data[i+2]),0);ctx.putImageData(imageData,x*imageData.width,y*imageData.height);}}}
function update(block){imageData.data.set(editor.codepage.fontData(block[0],block[1],block[2]),0);ctx.putImageData(imageData,(block[3]/3%columns)*fontWidth,Math.floor(block[3]/3/columns)*fontHeight);}
function mousedown(evt){var pos,xPos,yPos;evt.preventDefault();pos=evt.currentTarget.getBoundingClientRect();xPos=(evt.clientX-pos.left)*scaleFactor;yPos=(evt.clientY-pos.top)*scaleFactor;editor.centerOn(xPos,yPos);}
function mousemove(evt){var mouseButton;evt.preventDefault();mouseButton=(evt.buttons!==undefined)?evt.buttons:evt.which;if(mouseButton){mousedown(evt);}}
function createCanvas(){fontWidth=editor.codepage.getFontWidth();fontHeight=editor.codepage.getFontHeight();columns=editor.getColumns();rows=editor.getRows();canvas=ElementHelper.create("canvas",{"width":columns*fontWidth,"height":rows*fontHeight,"style":{"verticalAlign":"bottom","cursor":"move"}});if(canvas.width<160){scaleFactor=1;}else{scaleFactor=canvas.width/160;canvas.style.width="160px";canvas.style.height=(160/canvas.width*canvas.height)+"px";}
ctx=canvas.getContext("2d");imageData=ctx.createImageData(fontWidth,fontHeight);canvas.addEventListener("mousedown",mousedown,false);canvas.addEventListener("mousemove",mousemove,false);}
function rehashTool(){createCanvas();toolbar.replaceCanvas("preview",canvas);}
createCanvas();editor.addCanvasDrawListener(update);editor.addOverlayChangeListener(rehashTool);function init(){return false;}
function toString(){return"Preview";}
function onload(){redraw();}
return{"init":init,"toString":toString,"uid":"preview","hideText":true,"canvas":canvas,"onload":onload};}
AnsiEditController.addTool(previewTool,"preview",undefined);function smallPalettePreviewTool(editor){"use strict";var canvas;function colorChange(color){var ctx=canvas.getContext("2d");ctx.fillStyle=editor.codepage.styleRGBA(color,1);ctx.fillRect(0,0,canvas.width,canvas.height);}
function getCurrentColorAndChange(){colorChange(editor.getCurrentColor());}
canvas=ElementHelper.create("canvas",{"width":28,"height":28});editor.addColorChangeListener(colorChange);editor.addPaletteChangeListener(getCurrentColorAndChange);function init(){return false;}
function toString(){return"Palette";}
return{"init":init,"toString":toString,"uid":"small-pallette-preview","canvas":canvas,"hideText":true,"onload":getCurrentColorAndChange};}
AnsiEditController.addTool(smallPalettePreviewTool,"small-palette-preview",undefined);